<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Darer &#39; Blog</title>
  
  <subtitle>记录Darer的职业生涯</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://darerd.github.io/"/>
  <updated>2019-04-13T01:44:19.154Z</updated>
  <id>https://darerd.github.io/</id>
  
  <author>
    <name>Darer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>问答-怎么““骂”一个产品经理|产品问答|第4期</title>
    <link href="https://darerd.github.io/2019/04/13/%E9%97%AE%E7%AD%94-%E6%80%8E%E4%B9%88%E2%80%9C%E2%80%9C%E9%AA%82%E2%80%9D%E4%B8%80%E4%B8%AA%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86/"/>
    <id>https://darerd.github.io/2019/04/13/问答-怎么““骂”一个产品经理/</id>
    <published>2019-04-13T01:28:50.000Z</published>
    <updated>2019-04-13T01:44:19.154Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>看看同行们都在想些啥</p></blockquote><p><code>以下内容来自产品相关社区，如有侵权，请联系删除</code></p><p>[TOC]</p><h3><span id="q1骂一个产品经理最狠的方式是什么"> Q1：<strong>“骂”一个产品经理，最狠的方式是什么？</strong></span></h3><blockquote><p>在产品工作中，难免会出现摩擦的时刻；辣么，你曾见过“骂”一个产品经理的最狠方式是啥？一起来吐槽下~</p><p>看到这个问题，我就被吸引了，看看大家怎么说的</p></blockquote><p><code>author:Hsia @人人都是产品经理</code></p><p>不就是抄的xxx吗</p><p><code>author:向日葵诗人kevin @人人都是产品经理</code></p><p>分享一个最近和技术撕逼的例子</p><p>技术：你拿数据来说话</p><p>我：功能没做我哪里来的数据</p><p>技术：你去做用户调研，做访谈</p><p>我：不可能每个功能都去做调研</p><p>技术：那是你的事，不是我的事</p><p>我……</p><p><code>author:夜月沉星 @人人都是产品经理</code></p><p>你写的文档，就和cxk打球一样</p><blockquote><p>和cxk比较，真tm狠</p></blockquote><p><code>author:阳光懒人 @人人都是产品经理</code></p><ol><li><p>你自己需求都没想清楚</p></li><li><p>不用那么麻烦了，把你抄的APP给我们下载一个</p></li><li><p>产品经理不就是把老板想法复述一遍么……</p></li></ol><blockquote><p>巴拉巴拉的还有很多，就不写了，附个<a href="https://wen.woshipm.com/question/detail/8bdlm9.html" target="_blank" rel="noopener">链接</a>，大家可以去补充</p></blockquote><h3><span id="q2朋友圈广告可以艾特好友有什么意义"> Q2：<strong>朋友圈广告可以艾特好友有什么意义？</strong></span></h3><p><code>author:阳光懒人 @人人都是产品经理</code></p><p>朋友圈广告可以艾特好友，可能存在以下几个好处：</p><ol><li>增加了广告的社交属性，会让广告有更多的玩法，让广告商在设计广告的时候添加更多的互动性的创意，同时互动性、创意好的广告又能通过艾特功能提高传播效率和扩大传播范围，良性循环；</li><li>对于用户来说，也会有几种场景会用到艾特功能，比如说：微信给女朋友推了一个channel化妆品广告，女朋友很心动然后就艾特男朋友。类似这样的互动玩法也会增加广告的乐趣，让广告植入不那么生硬；</li><li>对于微信收集数据来说意义也是很大的，之前全靠推荐算法来推荐不同广告给不同用户群体，有了这个功能可能让广告投放更加精准。</li></ol><blockquote><p>看到这个消息，我的第一感受就是<strong>微信也要在商业化上提速了</strong></p></blockquote><h3><span id="q3搜一搜vs看一看哪一个的流量更大为什么"> Q3：<strong>「搜一搜」VS「看一看」，哪一个的流量更大？为什么？</strong></span></h3><p><code>author:chitang @人人都是产品经理</code></p><p>关于微信发现一栏里的搜一搜和看一看在2017年5月份正式更新上线。但对于一个产品来说都属于半成品都未全面的打开流量入口，当然凭借微信月活跃用户量10亿来说未来这两个依旧是不可估量的流量入口，目前都还停留在“实验室”中；</p><p><strong>「搜一搜」</strong><br>搜一搜的feed流则提供了长尾流量的能力，一方面是给公众号导流，另一方面也提供了变现的可能性。同时出现了很多可选内容，公众号、朋友圈、小程序、文章、小说、音乐、表情、视频、搜狗、知乎、外部资讯；搜一搜将搜索能力延申到更多外部信息内容，这一举措算是比较大的创新了，打破了以往腾讯的封闭圈。</p><p>对于全网搜索，已经是一片红海了，百度在移动端依然覆盖80%左右的市场份额，别说“怼”百度了，就是和360搜索“PK”起来都不是很容易。另外在用户搜索上，已经习惯性的通过百度或者谷歌等浏览器去搜索信息，很少人会去使用微信搜内容？用户习惯暂时形成不了，所以说搜一搜目前还是一个未成熟的功能。</p><p><strong>「看一看」</strong></p><p>看一看的内容主要是以展现朋友圈，好友，微信群，公众号等渠道看到的内容—统称为**“已关注或已关联”**内容。但还有未关注和未关联的内容也将展现在这里（这部分未关联内容可能和个人的兴趣关注、地理位置、热点资讯、好友的分享，转发，点赞等相关维度做信息推荐及展现）属于微信的个性化智能化推荐；</p><p><strong>微信对于「搜一搜」和「看一看」的流量分配中“看一看”目前的流量大于“搜一搜”；</strong><br>“搜一搜”则是用来帮助用户快速查找内容或服务，搜索项目包括朋友圈、文章、公众号、小说和表情等，但，&quot; 搜一搜 &quot;基于知乎用户的使用习惯和操作方式来看目前使用频次较少；</p><p>&quot; 看一看 &quot; 所呈现内容，目前跟它们的阅读量、点赞量、转发量、留言评论量及赞赏数量等尚未显现出强关联的关系。看一看的主要呈现为：已认证公众号内容、原创内容、长篇内容这几大类型；用户可以浏览热点资讯、好友关注的资讯以及自己感兴趣的文章，“看一看”则提供了用户感兴趣的热点资讯“集合”，并且有小红点加持，消灭小红点的时候你也会打开它。</p><p>其中，微信对于用户停留时长，即用户如果阅读这篇文章的时间越长，它越有可能被精选、分发到 &quot; 看一看 “、” 搜一搜 &quot; 等页面。</p><p>再说一句，其中还存在用户使用习惯和人性的特点：<strong>被动获取内容  &gt; 主动获取内容，人性上都是比较懒惰的 … …</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;看看同行们都在想些啥&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;以下内容来自产品相关社区，如有侵权，请联系删除&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3&gt;&lt;span id=&quot;q1骂一个产品经理最狠的方式是什么&quot;&gt; Q1：&lt;
      
    
    </summary>
    
      <category term="产品问答" scheme="https://darerd.github.io/categories/%E4%BA%A7%E5%93%81%E9%97%AE%E7%AD%94/"/>
    
    
      <category term="产品问答" scheme="https://darerd.github.io/tags/%E4%BA%A7%E5%93%81%E9%97%AE%E7%AD%94/"/>
    
  </entry>
  
  <entry>
    <title>端产品经理应有的姿态</title>
    <link href="https://darerd.github.io/2019/04/13/%E7%AB%AF%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E5%BA%94%E6%9C%89%E7%9A%84%E5%A7%BF%E6%80%81-1/"/>
    <id>https://darerd.github.io/2019/04/13/端产品经理应有的姿态-1/</id>
    <published>2019-04-13T00:31:18.000Z</published>
    <updated>2019-04-13T00:31:18.361Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>端产品经理应有的姿态</title>
    <link href="https://darerd.github.io/2019/04/13/%E7%AB%AF%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E5%BA%94%E6%9C%89%E7%9A%84%E5%A7%BF%E6%80%81/"/>
    <id>https://darerd.github.io/2019/04/13/端产品经理应有的姿态/</id>
    <published>2019-04-13T00:30:10.000Z</published>
    <updated>2019-04-13T00:30:10.901Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>产品书单-《免费》：互联网时代纵横捭阖的商业模式</title>
    <link href="https://darerd.github.io/2019/04/11/%E4%BA%A7%E5%93%81%E4%B9%A6%E5%8D%95-%E3%80%8A%E5%85%8D%E8%B4%B9%E3%80%8B%EF%BC%9A%E4%BA%92%E8%81%94%E7%BD%91%E6%97%B6%E4%BB%A3%E7%BA%B5%E6%A8%AA%E6%8D%AD%E9%98%96%E7%9A%84%E5%95%86%E4%B8%9A%E6%A8%A1%E5%BC%8F/"/>
    <id>https://darerd.github.io/2019/04/11/产品书单-《免费》：互联网时代纵横捭阖的商业模式/</id>
    <published>2019-04-11T13:40:59.000Z</published>
    <updated>2019-04-11T14:17:49.861Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="免费互联网时代纵横捭阖的商业模式"> 《免费》：互联网时代纵横捭阖的商业模式</span></h1><p>今天推荐一本所有互联网时代的“居民”都应该看的书：<strong>《免费》：互联网时代纵横捭阖的商业模式</strong></p><h3><span id="写在前面"> 写在前面</span></h3><p>作者把免费模式分为四类：</p><ol><li><strong>直接交叉补贴</strong></li></ol><p><img src="https://i.loli.net/2019/04/11/5caf4766d7de0.png" alt=""></p><p>直接吸引到消费者的商品是免费或者趋近于免费的，而其真正的目的是让其他的产品特别是数量显得更多利润率更高的商品能够进一步的去挖掘开发出消费者的潜在需求从而达到来推销其他付费产品的目的。</p><p>这样的例子生活中很多，比如说点外卖时，买麻辣香锅送可乐；书店提高免费看书的场地，但是你会在看书之余买一杯咖啡。</p><ol start="2"><li><strong>三方市场</strong></li></ol><p><img src="https://i.loli.net/2019/04/11/5caf49714ecf0.png" alt=""></p><p>指的是第三方付费来加入前两方的免费商品交易</p><p>这个应该是最最最常用和最最最熟悉的商业模式，百度竞价、APP开屏广告、浏览器广告等等，几乎每一家C端产品都会或多或少的采用这种商业模式，卖广告位！</p><ol start="3"><li><strong>免费加收费模式</strong></li></ol><p><img src="https://i.loli.net/2019/04/11/5caf4917d274f.png" alt=""></p><p>这个在工具类产品或者B端产品中最常见，付费提高专业版或者豪华版。</p><ol start="4"><li><strong>非货币市场</strong></li></ol><p><img src="https://i.loli.net/2019/04/11/5caf49afdff55.png" alt=""></p><p>货币在21世纪这样的信息化时代中，并不是唯一的价值衡量标准。网络为信息传播提供了平台与支持，使得消费者能够获取到免费的服务与信息，用户则通过零成本的信息在平台上传播，进行自己观点的表达等同时也是向提供服务的一端进行反馈，为其带来像关注度、声誉等等非物质化的价值。</p><p>这个模式更多是用在自媒体人、网红以及明星中，打造名气、建立IP等</p><p><a href="https://www.jianshu.com/p/3e99e94003b4" target="_blank" rel="noopener">配图来源</a></p><h3><span id="免费"> 《免费》</span></h3><p><img src="https://i.loli.net/2019/04/11/5caf45a685113.png" alt=""></p><h3><span id="内容介绍"> 内容介绍</span></h3><p>21世纪出现的免费模式与以原子经济为基础的20世纪的免费截然不同，20世纪仍处于的是工业化的时代，作为主导的原子经济强调的是物质性。到了21世纪出现的新型免费不再是想要得到任何的免费始终还是需要换一种形式付钱（即左口袋进了有口袋还是得出）的一种营销策略，而是一种以强调数字化经济为基础将货物与服务的成本压到接近于零的全新经济模式。</p><p>免费现象的根本问题在于真正的免费如何赢利！只有当免费的过程本身创造新价值，只有当免费过程的所有参与者都能分享到这份新创价值，真正的免费才是可行的，赢利的。一般而言，有两种商业模式可以做到真正的免费而赢利：一是生产者不花成本生产，全免费不亏，部分免费赢利；一是通过资源整合创造新价值，免费用新价值支付，只要新价值足够大，全部免费也能赢利。</p><p>看清楚林林总总的免费归根结底都表现为同一实质——让钱在不同的产品之间、人之间、现在和未来之间、不与钱打交道的市场和金钱市场之间转移。经济学家把它称做“交叉补贴”。 世界就是一个“交叉补贴”的大舞台。</p><ul><li>用付费产品来补贴免费产品。</li><li>用日后付费来补贴当前免费。</li><li>付费人群来给不付费人群提供补贴。</li></ul><p>任何产品价值主要在于知识产权而非物质资料的行业均是如此。药物（药片本身几乎一文不值，但药物的研发成本却高达数百万美元）、半导体芯片（与药品类似），甚至包括好莱坞大片（电影制造成本很高但复制却相当便宜）统统属于此类。 这些行业从所谓的“递增收益”（increasing returns）中获利，收益递增规律认为尽管产品的固定成本（研发、工厂建设等）可能会很高，但如果边际成本相对较低，那么产量越大，利润率越高。追求“最大化”战略的回报在于投资者的固定成本被分摊到更多的单位中，从而使得每个单位的收益都有所增加。</p><h3><span id="作者介绍"> 作者介绍</span></h3><p>克里斯·安德森，自2001年起担任美国《连线》杂志总编辑。他被誉为“信息时代的精神领袖”。在其领导下，数字世界的“号角”——《连线》杂志获奖无数。他有关互联网经济的演讲赢得了广泛称赞。他还是一位才华横溢的记者，他的作品《长尾理论》开创了一个新的商业模式，同时，该书也成为全球畅销书。</p><h3><span id="目录"> 目录</span></h3><p><img src="https://i.loli.net/2019/04/11/5caf4c811672e.png" alt=""></p><h3><span id="下载地址"> 下载地址</span></h3><p>关注微信公众号：<strong>产品汪darer</strong>，后台回复关键词：<strong>免费</strong>，即可下载</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;免费互联网时代纵横捭阖的商业模式&quot;&gt; 《免费》：互联网时代纵横捭阖的商业模式&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;今天推荐一本所有互联网时代的“居民”都应该看的书：&lt;strong&gt;《免费》：互联网时代纵横捭阖的商业模式&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;s
      
    
    </summary>
    
      <category term="产品书单" scheme="https://darerd.github.io/categories/%E4%BA%A7%E5%93%81%E4%B9%A6%E5%8D%95/"/>
    
    
      <category term="产品书单" scheme="https://darerd.github.io/tags/%E4%BA%A7%E5%93%81%E4%B9%A6%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>编程小白的第一本Python入门书学习笔记</title>
    <link href="https://darerd.github.io/2019/04/10/%E7%BC%96%E7%A8%8B%E5%B0%8F%E7%99%BD%E7%9A%84%E7%AC%AC%E4%B8%80%E6%9C%ACPython%E5%85%A5%E9%97%A8%E4%B9%A6%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://darerd.github.io/2019/04/10/编程小白的第一本Python入门书学习笔记/</id>
    <published>2019-04-10T13:34:19.000Z</published>
    <updated>2019-04-10T13:35:43.890Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="编程小白的第一本python入门书学习笔记"> 编程小白的第一本Python入门书学习笔记</span></h1><p>最近在学习Python的过程中，发现一本对小白非常友好的入门书-《编程小白的第一本Python入门书》，书中对知识点的讲解很易懂，一些以前不太理解的概念，在看完这本书之后也有眉目了。</p><p>这里主要介绍下自己学习时做的一些笔记，<strong>如果其中有理解错误的地方，麻烦评论或者私信告知。</strong></p><p>有幕布账号的小伙伴也可以去<a href="https://mubu.com/doc/a7RG89q8Kw" target="_blank" rel="noopener">幕布链接</a></p><p>[TOC]</p><h3><span id="字符串"> 字符串</span></h3><ul><li><p>字符串</p><p><img src="https://img.mubu.com/document_image/079ab1e3-ebf3-4a7d-9e29-29aec94729da-2686885.jpg" alt="img"></p></li><li><p>字符串的分片与索引</p><ul><li><p>字符串可以通过<code>string[x]</code>的方式进行索引、分片，也就是加一个<code>[]</code></p><p><img src="https://img.mubu.com/document_image/f15e9c26-acf1-40be-a061-793501745ab9-2686885.jpg" alt="img"></p></li></ul></li><li><p>字符串的方法</p><p><img src="https://img.mubu.com/document_image/f86a1b84-fbee-40ea-b637-4564804385ec-2686885.jpg" alt="img"></p><p>非常形象的比喻</p></li></ul><h3><span id="函数"> 函数</span></h3><ul><li><p>函数</p><p><img src="https://img.mubu.com/document_image/f608d9fc-284b-477e-99d7-fbb1fadf3d46-2686885.jpg" alt="img"></p></li><li><p>创建函数</p><p><img src="https://img.mubu.com/document_image/e335bee1-1539-4d84-8363-cd2350b57e5b-2686885.jpg" alt="img"></p><ul><li><p>如果忘记写<code>return</code>，会出现什么情况</p><p><img src="https://img.mubu.com/document_image/fb0159b5-73da-4436-85a2-dd106adb8a73-2686885.jpg" alt="img"></p><p><img src="https://img.mubu.com/document_image/9ce6a90d-480b-4641-99ad-f3d3c094b00d-2686885.jpg" alt="img"></p></li></ul></li><li><p>调用函数</p><ul><li>两点最重要：<ul><li>定义的函数名（这个人叫什么）</li><li>定义的函数参数（这个人的特点是什么，不然遇到重名，无法识别）</li></ul></li></ul><h3><span id="循环与判断"> 循环与判断</span></h3><ul><li><p>逻辑循环</p><p><img src="https://img.mubu.com/document_image/badf9ad1-8f74-4284-a537-eb5c37138fda-2686885.jpg" alt="img"></p></li><li><p>比较运算</p><p><img src="https://img.mubu.com/document_image/d93b4a35-4de3-4864-92b7-77fe93a6e75a-2686885.jpg" alt="img"></p></li><li><p>布尔值</p><p><img src="https://img.mubu.com/document_image/613f0ad2-da43-436d-a134-fdbb6c2a1d97-2686885.jpg" alt="img"></p></li><li><p>列表</p><p><img src="https://img.mubu.com/document_image/81078827-81ba-439f-8b83-00d7c9605f0b-2686885.jpg" alt="img"></p></li></ul></li></ul><h3><span id="条件控制"> 条件控制</span></h3><ul><li><p><code>if ...... else......</code></p><p><img src="https://img.mubu.com/document_image/846b4aa0-8ba1-44ac-89d6-e38f3f6faa01-2686885.jpg" alt="img"></p></li><li><p><code>if ..... elif...... else.........</code></p><p><img src="https://img.mubu.com/document_image/54640cf8-9410-4d41-b339-446229e9dc2d-2686885.jpg" alt="img"></p></li></ul><h3><span id="循环"> 循环</span></h3><ul><li><p><code>for</code> 循环</p><p><img src="https://img.mubu.com/document_image/061ee58c-0ccd-4e2e-96b9-90aed00783fa-2686885.jpg" alt="img"></p></li><li><p><code>while</code>循环</p><p><img src="https://img.mubu.com/document_image/5c1d8bb6-7adc-4dad-86fd-0982cd5b7436-2686885.jpg" alt="img"></p><p><img src="https://img.mubu.com/document_image/fe566539-a680-4141-8734-511a6c9f91b0-2686885.jpg" alt="img"></p></li></ul><h3><span id="数据结构"> 数据结构</span></h3><ul><li><p>四种数据结构</p><p><img src="https://img.mubu.com/document_image/9c55b7ad-464e-4d14-b74e-2561aeca679e-2686885.jpg" alt="img"></p><ul><li><p>列表</p><p><img src="https://img.mubu.com/document_image/6238fa97-c51f-4242-81fc-8b34fd1115c9-2686885.jpg" alt="img"></p><p><img src="https://img.mubu.com/document_image/0c93129a-2cd2-4288-b1cb-0b603b6e1a0b-2686885.jpg" alt="img"></p></li><li><p>字典</p><p><img src="https://img.mubu.com/document_image/3cef2a50-6b87-4b1d-88c7-e1b6a355cc67-2686885.jpg" alt="img"></p><p><img src="https://img.mubu.com/document_image/e0e9e6b4-e9a5-49e0-a7dc-202f155e27a2-2686885.jpg" alt="img"></p></li><li><p>元组</p><p><img src="https://img.mubu.com/document_image/9592930d-a16a-4213-ba30-31ea6924a421-2686885.jpg" alt="img"></p><p><img src="https://img.mubu.com/document_image/32c0c977-2f43-4c2d-a50f-e4db1c82ff31-2686885.jpg" alt="img"></p></li><li><p>集合</p><p><img src="https://img.mubu.com/document_image/32c0c977-2f43-4c2d-a50f-e4db1c82ff31-2686885.jpg" alt="img"></p></li><li><p>列表推导式</p><p><img src="https://img.mubu.com/document_image/30f154bd-0d45-4afe-a795-266045254d9c-2686885.jpg" alt="img"></p><p><img src="https://img.mubu.com/document_image/2ca03c9a-2d06-46c9-981f-b0b565e149c8-2686885.jpg" alt="img"></p></li></ul></li></ul><p>###类</p><ul><li><p>类的概念</p><p><img src="https://img.mubu.com/document_image/86bf1b24-30c2-4193-bdf3-72953e7be913-2686885.jpg" alt="img"></p><p><img src="https://img.mubu.com/document_image/6580704f-a3f4-4ba8-abd3-242b746c4385-2686885.jpg" alt="img"></p></li><li><p>类有很多概念还是没有吃透和理解</p></li><li><p>类有属性</p><ul><li><p>类的属性就如同可口可乐的饮料配方</p><p><img src="https://img.mubu.com/document_image/bc1c1b80-e487-4119-a4fd-3ae8b22ffb81-2686885.jpg" alt="img"></p></li></ul></li><li><p>类可以实例化</p><ul><li><p>利用饮料的配方在生产线上生产出饮料产品</p></li><li><p>生产的饮料产品有着相同的配发(属性)</p><p><img src="https://img.mubu.com/document_image/c48923d0-c709-460b-97a4-dbe0e8e5a17d-2686885.jpg" alt="img"></p></li></ul></li><li><p>类实例化后也有属性</p><ul><li><p>生产线生产出的饮料，需要对其进行包装，包装就是实例的属性</p><p><img src="https://img.mubu.com/document_image/559bdb9c-70cb-482c-862a-338148025317-2686885.jpg" alt="img"></p></li></ul></li><li><p>类实例化后 肯定是希望能做一些事情</p><ul><li><p>这是就可以在类里定义函数，让这个类去做一些事情</p></li><li><p>比如，可乐可以用来喝，用来赠送等等行为</p><p><img src="https://img.mubu.com/document_image/5274043d-413b-4e13-8ffe-2875efedaab2-2686885.jpg" alt="img"></p></li></ul></li><li><p><strong>后面关于 <code>__init__</code>的用法，还是没有看懂</strong>（有大佬懂的话，可以在评论区或者留言区解释下）</p></li></ul><h3><span id="全书下载地址"> 全书下载地址</span></h3><p><a href="http://www.ituring.com.cn/book/1863" target="_blank" rel="noopener">应该是官网地址</a></p><p><a href="https://u19341005.pipipan.com/fs/19341005-363267201" target="_blank" rel="noopener">或者去我的网盘直接下载</a></p><h3><span id="书中习题练习源代码"> 书中习题练习源代码</span></h3><p>书中提供了一些习题，我按照自己的理解写了一些代码，分享给大家，可能代码写的不是非常合理和优雅，也希望大家多多指正。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="comment"># 编程小白的第一本Python</span></span><br><span class="line"><span class="comment"># Version：Python 3</span></span><br><span class="line"><span class="comment"># 书中有趣的程序</span></span><br><span class="line"></span><br><span class="line">search = <span class="string">'168'</span></span><br><span class="line">num_a = <span class="string">'1386-168-0006'</span></span><br><span class="line">num_b = <span class="string">'1681-222-0006'</span></span><br><span class="line"><span class="keyword">print</span> (search + <span class="string">'is at'</span>+str(num_a.find(search)+<span class="number">1</span>)+<span class="string">'to'</span>+str(num_a.find(search)+len(search))+<span class="string">'of num_a'</span>)</span><br><span class="line"><span class="keyword">print</span> (int(search))</span><br><span class="line"></span><br><span class="line"><span class="comment">### 把上面的结果改编为以下的函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">a_function</span> <span class="params">(search)</span>:</span></span><br><span class="line">num_a = <span class="string">'1386-168-0006'</span></span><br><span class="line">num_b = <span class="string">'1681-222-0006'</span></span><br><span class="line">a=search + <span class="string">'is at'</span>+str(num_a.find(search)+<span class="number">1</span>)+<span class="string">'to'</span>+str(num_a.find(search)+len(search))+<span class="string">'of num_a'</span></span><br><span class="line"><span class="keyword">return</span> (a)</span><br><span class="line"><span class="keyword">print</span> (a_function(<span class="string">'168'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 练习题1#--------------质量转换-----------------</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">q1_function</span> <span class="params">(m)</span>:</span></span><br><span class="line">M = m/<span class="number">1000</span></span><br><span class="line"><span class="keyword">return</span> (M)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"质量1000g等于:"</span>,q1_function(<span class="number">1000</span>),<span class="string">"kg"</span>)</span><br><span class="line"><span class="comment"># 练习题2#---------------勾股定理----------------</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">q2_function</span> <span class="params">(a,b)</span>:</span></span><br><span class="line">c = math.sqrt(pow(a,<span class="number">2</span>)+pow(b,<span class="number">2</span>))</span><br><span class="line"><span class="keyword">return</span> (c)</span><br><span class="line">a = int(input (<span class="string">'&gt; '</span>))</span><br><span class="line">b = int(input (<span class="string">'&gt; '</span>))</span><br><span class="line"><span class="keyword">print</span> (<span class="string">'斜边长度是：'</span>,q2_function(a,b))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设计一个函数：写入文件#---------------------</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text_create</span><span class="params">(name,msg)</span>:</span></span><br><span class="line">desktop_path = <span class="string">'C://Users/admin/Desktop/'</span></span><br><span class="line">full_path = desktop_path + name + <span class="string">'.txt'</span></span><br><span class="line">file = open (full_path,<span class="string">'w'</span>)</span><br><span class="line"><span class="comment"># 参数'w'的作用：如果该路径没有文件，就会创建一个有该名称的文件，并写入内容；如果该路径有此文件，就会覆盖文本内容</span></span><br><span class="line">file.write(msg)</span><br><span class="line">file.close()</span><br><span class="line"><span class="keyword">print</span> (<span class="string">'Done'</span>)</span><br><span class="line">text_create(<span class="string">'hello'</span>,<span class="string">'Hello world'</span>)</span><br><span class="line"><span class="comment"># 设计一个函数：敏感词过滤#---------------------</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text_filter</span> <span class="params">(word,censored_word = <span class="string">'lame'</span>, changed_word = <span class="string">'awesome'</span>)</span>:</span></span><br><span class="line"><span class="keyword">return</span> word.replace(censored_word,changed_word)</span><br><span class="line"><span class="keyword">print</span> (text_filter(<span class="string">'Python is lame!'</span>))</span><br><span class="line"><span class="comment"># 合并上面的两个函数，做一个敏感词过滤器#---------------</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">censored_text_filter</span><span class="params">(name,msg)</span>:</span></span><br><span class="line">clean_msg = text_filter(msg)</span><br><span class="line">text_create(name,clean_msg)</span><br><span class="line">censored_text_filter(<span class="string">'try'</span>,<span class="string">'lame,lame'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 练习题3#---------------创建十个文本，并以数字命名----------------</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text_ten</span><span class="params">(name,msg)</span>:</span></span><br><span class="line">desktop_path = <span class="string">'C://Users/admin/Desktop/'</span></span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line"><span class="comment"># range()函数得到的是整数</span></span><br><span class="line">full_path = desktop_path + str(name) + <span class="string">'.txt'</span></span><br><span class="line"><span class="comment"># 路径中需要的是字符，需要用str()函数把整数转化为字符</span></span><br><span class="line">file = open (full_path,<span class="string">'w'</span>)</span><br><span class="line">file.write(msg)</span><br><span class="line">file.close()</span><br><span class="line"><span class="keyword">print</span> (<span class="string">'Done'</span>)</span><br><span class="line">text_ten(name = input(<span class="string">'&gt; '</span>),msg=<span class="string">'Hello world'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 练习题4#---------------复利计算器----------------</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Compounding_Calculator</span> <span class="params">(year)</span>:</span></span><br><span class="line">rate = <span class="number">0.05</span></span><br><span class="line">amount = <span class="number">100</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">9</span>):</span><br><span class="line">compounding_amount = amount*(<span class="number">1</span>+rate)**i</span><br><span class="line"><span class="keyword">print</span> (<span class="string">'principal amount:'</span>,amount)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">'year'</span>,i,<span class="string">': $'</span>,compounding_amount)</span><br><span class="line">Compounding_Calculator(input(<span class="string">'&gt; '</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 练习题5#---------------打印1-100的偶数----------------</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">51</span>):</span><br><span class="line"><span class="keyword">print</span> (<span class="number">2</span>*i)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 练习题6#---------------电话号码小游戏----------------</span></span><br><span class="line">CN_mobile = [<span class="number">134</span>,<span class="number">135</span>,<span class="number">136</span>,<span class="number">137</span>,<span class="number">138</span>,<span class="number">139</span>,<span class="number">150</span>,<span class="number">151</span>,<span class="number">152</span>,<span class="number">157</span>,<span class="number">158</span>,<span class="number">159</span>,<span class="number">182</span>,<span class="number">183</span>,<span class="number">184</span>,<span class="number">187</span>,<span class="number">188</span>,<span class="number">147</span>,<span class="number">178</span>,<span class="number">1705</span>]</span><br><span class="line">CN_union = [<span class="number">130</span>,<span class="number">131</span>,<span class="number">132</span>,<span class="number">155</span>,<span class="number">156</span>,<span class="number">185</span>,<span class="number">186</span>,<span class="number">145</span>,<span class="number">176</span>,<span class="number">1709</span>]</span><br><span class="line">CN_telecom = [<span class="number">133</span>,<span class="number">153</span>,<span class="number">180</span>,<span class="number">181</span>,<span class="number">189</span>,<span class="number">177</span>,<span class="number">1700</span>]</span><br><span class="line">num = input()</span><br><span class="line"><span class="keyword">if</span> len(num) &lt; <span class="number">11</span> :</span><br><span class="line"><span class="keyword">print</span> (<span class="string">'Invalid length,your number should be in 11 digits'</span>)</span><br><span class="line"><span class="keyword">elif</span> int(num[:<span class="number">3</span>]) <span class="keyword">in</span> CN_mobile:</span><br><span class="line"><span class="keyword">print</span> (<span class="string">'Operator : China mobile'</span>)</span><br><span class="line"><span class="keyword">elif</span> int(num[:<span class="number">3</span>]) <span class="keyword">in</span> CN_union:</span><br><span class="line"><span class="keyword">print</span> (<span class="string">'Operator : China union'</span>)</span><br><span class="line"><span class="keyword">elif</span> int(num[:<span class="number">3</span>]) <span class="keyword">in</span> CN_telecom:</span><br><span class="line"><span class="keyword">print</span> (<span class="string">'Operator : China telecom'</span>)</span><br><span class="line"><span class="keyword">else</span> :</span><br><span class="line"><span class="keyword">print</span> (<span class="string">'No such a operator'</span>)</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"we're sending verification code via text to your phone: "</span>,num)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;编程小白的第一本python入门书学习笔记&quot;&gt; 编程小白的第一本Python入门书学习笔记&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;最近在学习Python的过程中，发现一本对小白非常友好的入门书-《编程小白的第一本Python入门书》，书中对知识点的讲解很易懂，
      
    
    </summary>
    
      <category term="产品经理学技术" scheme="https://darerd.github.io/categories/%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E5%AD%A6%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Python" scheme="https://darerd.github.io/categories/%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E5%AD%A6%E6%8A%80%E6%9C%AF/Python/"/>
    
    
      <category term="Python" scheme="https://darerd.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>软件-Windows系统下最实用的日程管理软件-桌面日历DesktopCal</title>
    <link href="https://darerd.github.io/2019/04/07/%E8%BD%AF%E4%BB%B6-Windows%E7%B3%BB%E7%BB%9F%E4%B8%8B%E6%9C%80%E5%AE%9E%E7%94%A8%E7%9A%84%E6%97%A5%E7%A8%8B%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6-%E6%A1%8C%E9%9D%A2%E6%97%A5%E5%8E%86DesktopCal/"/>
    <id>https://darerd.github.io/2019/04/07/软件-Windows系统下最实用的日程管理软件-桌面日历DesktopCal/</id>
    <published>2019-04-07T11:53:01.000Z</published>
    <updated>2019-04-07T12:08:38.079Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="windows系统下最实用的日程管理软件-桌面日历desktopcal"> Windows系统下最实用的日程管理软件-桌面日历DesktopCal</span></h1><p>时间管理，无论是对工作、还是学习都非常重要。</p><p>所以有一款好用的时间管理软件，会让你事半功倍，时间安排更加心中有数</p><p>今天推荐的一款应该是Windows系统下最实用的日常管理 软件</p><p><code>桌面日历DesktopCal</code></p><h3><span id="界面"> 界面</span></h3><p><img src="https://i.loli.net/2019/04/07/5ca9e5f89afd5.png" alt=""></p><h3><span id="演示"> 演示</span></h3><p><img src="https://i.loli.net/2019/04/07/5ca9e6bb218a9.gif" alt=""></p><h3><span id="主要功能"> 主要功能</span></h3><p><img src="https://i.loli.net/2019/04/07/5ca9e6f13a18a.png" alt=""></p><blockquote><p>自从发现了这款软件之后，真的是爱不释手</p><p>这款软件可以很好的帮助你对整体的日程安排有一个非常直接的认识</p><p>知道每一个任务或者计划需要多长时间，需要在哪几天完成等等</p><p><a href="http://chs.desktopcal.com/" target="_blank" rel="noopener">官网地址</a></p></blockquote><h3><span id="下载方式"> 下载方式</span></h3><p>关注微信公众号：<strong>产品汪darer</strong>，后台回复关键词：<strong>桌面日历DesktopCal</strong>，即可下载</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;windows系统下最实用的日程管理软件-桌面日历desktopcal&quot;&gt; Windows系统下最实用的日程管理软件-桌面日历DesktopCal&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;时间管理，无论是对工作、还是学习都非常重要。&lt;/p&gt;
&lt;p&gt;所以有一款好用
      
    
    </summary>
    
      <category term="软件资源" scheme="https://darerd.github.io/categories/%E8%BD%AF%E4%BB%B6%E8%B5%84%E6%BA%90/"/>
    
    
      <category term="软件资源" scheme="https://darerd.github.io/tags/%E8%BD%AF%E4%BB%B6%E8%B5%84%E6%BA%90/"/>
    
      <category term="产品必用软件" scheme="https://darerd.github.io/tags/%E4%BA%A7%E5%93%81%E5%BF%85%E7%94%A8%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>随想-我对996工作制的看法</title>
    <link href="https://darerd.github.io/2019/04/04/%E9%9A%8F%E6%83%B3-%E6%88%91%E5%AF%B9996%E5%B7%A5%E4%BD%9C%E5%88%B6%E7%9A%84%E7%9C%8B%E6%B3%95/"/>
    <id>https://darerd.github.io/2019/04/04/随想-我对996工作制的看法/</id>
    <published>2019-04-04T05:05:08.000Z</published>
    <updated>2019-04-04T05:49:36.886Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="我对996工作制的看法"> 我对996工作制的看法</span></h1><p>由于<a href="996.icu">996.icu</a>的出现，最近关于996的讨论，越来越多，也看了不少人的看法<br>主流是两种看法：</p><ol><li>如果你不认可公司的996制度，你可以不来，你可以不选择公司，没人逼你</li><li>另外一种是996违反劳动法，我们要维护自己的权益</li></ol><p>先说下自己的看法，我会做996的工作，因为自己能力不够，因为自己没钱，因为自己没得选择，<br>但是我反对996的制度和文化，我不会赞同996的制度。</p><p>简单表达下对主流两种说法的态度：<br>支持第一种观点的主要是企业管理者和部分打工仔<br>这种观点明显是一种，你爱来不来，你不来有人来，中国不缺人。这根本就不是一种解决问题的态度，一种小孩子撒泼耍赖的态度。<br>996代表的是一种高负荷的工作强度，无数的研究告诉你，高负荷的工作带来的是低效的成果。<br>为什么明明知道这是一种低效的方法还不改正呢？<br>因为改正的成本比不改正的成本高，为了追求更高的价值，肯定不改正。<br>其实个人认为大企业应该承担这种革新管理制度的责任，虽然国家经济发展越来越好，对全球经济发展贡献越来越多了，但是关于企业管理这块，咱们还很弱小，我们仍然不思进取，只会人海战术。<br>这也是一种企业应该承担起来的社会责任，而不是耍赖的说，你爱来不来。</p><p>支持第二种说法的，多是打工仔，有人统计了996.icu的关注者，多是基层程序员。<br>这类人拿起了法律的武器，个人还是蛮认可这种做法。可是其中应该也有不少是这样的想法吧，钱给的不够，给够了我才不反对996。<br>关于这类人，我觉得我不佩服你，你从心里并不反对996这种文化，制度。你反对的是钱太少了。</p><p>希望企业和社会都可以认识到996是一种落后的管理方式，都敢于承认这是一种错误，而不是一种耍赖的态度，那些反对996的程序员们，希望你们是真心的反对这种文化，而不是仅仅因为钱不够采取反对，希望社会重视起来法律，依法治国，只有企业觉得996的成本变高了，才会去变革管理方法，这样才会长久，没有先进的管理方法，一个企业是长久不了的。</p><p>其实社会上比程序员996累的多的，没有保障的工作遍地都是。<br>很多医生，列车乘务员，工厂的工人，农民工，个体户，金融从业者，科研工作者等等吧，他们的工作强度都不亚于996。</p><p>我妈妈在一家药店（个体户）上班，可以说是867，全年就过年放个假，自己看着真的心疼<br>我爸爸是农民工，工地的环境和工作强度，我体验过，很差</p><p>而我，面对996，有什么办法吗？<br>我觉得自己比父母的环境好太多了，对我自己而言，我自己会做996的工作，因为我一无所有，只有不断拼命的工作，但是如果你问我是否认可996的文化和制度，我不认可。</p><p>错的就是错的，首先你要去承认，只有承认了，才能去做出改变。<br>希望类似996的工作文化和制度，能在我这一辈终结，让自己的孩子未来过得更幸福。</p><p>我只是中国亿万群体中的一个小个体，无力改变什么，只有在这写写东西，表达自己的观点，以后翻回来看看，也不后悔，给孩子看看，让他觉得老爸棒棒的。<br>思绪很乱，写在火车卧铺上<br><strong>以上都是个人看法，严禁转载！！！</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;我对996工作制的看法&quot;&gt; 我对996工作制的看法&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;由于&lt;a href=&quot;996.icu&quot;&gt;996.icu&lt;/a&gt;的出现，最近关于996的讨论，越来越多，也看了不少人的看法&lt;br&gt;
主流是两种看法：&lt;/p&gt;
&lt;ol&gt;
&lt;l
      
    
    </summary>
    
      <category term="随想" scheme="https://darerd.github.io/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
      <category term="随想" scheme="https://darerd.github.io/tags/%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>产品书单-《稀缺》：你是怎么不断陷入deadline循环的？</title>
    <link href="https://darerd.github.io/2019/04/01/%E4%BA%A7%E5%93%81%E4%B9%A6%E5%8D%95-%E3%80%8A%E7%A8%80%E7%BC%BA%E3%80%8B%EF%BC%9A%E4%BD%A0%E6%98%AF%E6%80%8E%E4%B9%88%E4%B8%8D%E6%96%AD%E9%99%B7%E5%85%A5deadline%E5%BE%AA%E7%8E%AF%E7%9A%84%EF%BC%9F/"/>
    <id>https://darerd.github.io/2019/04/01/产品书单-《稀缺》：你是怎么不断陷入deadline循环的？/</id>
    <published>2019-04-01T12:51:35.000Z</published>
    <updated>2019-04-01T13:36:54.405Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="稀缺你是怎么不断陷入deadline循环的"> 《稀缺》：你是怎么不断陷入deadline循环的？</span></h1><blockquote><p>每一位产品人都应该多看书，读好书，多思考<br>只有这样才能不断进步</p></blockquote><p><strong>今天推荐一本蛮有趣的书：《稀缺》，稀缺，是“拥有”少于“需要”的感觉</strong></p><h3><span id="写在前面的话"> 写在前面的话</span></h3><p>稀缺，是“拥有”少于“需要”的感觉，稀缺不是客观上的物质稀缺，而指一种会让人产生急迫感的稀缺心态。</p><p>稀缺心态有利有弊，它可以为你提供专注红利，使你更聚焦在要做的事情的上，大大提高做事的效率；</p><p>但是呢，凡事必有利弊，由于聚焦在要做的事情上，就会产生管窥心态，忽略身边的事情，比如由于要赶工，可能受到干扰后，会更容易发火。</p><h3><span id="稀缺"> 《稀缺》</span></h3><p><code>塞德希尔·穆来纳森/埃尔德·沙菲尔</code></p><p><img src="https://i.loli.net/2019/04/01/5ca20f0a2715b.png" alt=""></p><h3><span id="内容介绍"> 内容介绍</span></h3><blockquote><p>《稀缺》是《思考，快与慢》作者丹尼尔·卡尼曼最推崇的行为经济学新作，它旨在揭示稀缺心态的各种复杂成因，并提出以“余闲”牵制稀缺的应对之法。所以，只有对“带宽”进行合理的规划和管理，我们才有可能从稀缺走向富足。</p></blockquote><p><strong>稀缺会产生四种效应：</strong></p><ol><li><strong>稀缺会导致管窥效应</strong></li></ol><p>所谓管窥，是指当我们专注于某件事时，会忽略其他事情，就像从管中窥看这个世界。</p><p>面对稀缺，我们就更倾向于把注意力集中在最需要关注的事儿上面，这么一来，我们往往会忽视那些真正重要的事情。</p><p>管窥效应会改变我们做出决策的方式。例如工作任务多而中断每天跑步，在这个稀缺状态下，就会做出损害长期价值的决定。</p><ol start="2"><li><strong>稀缺会导致借用</strong></li></ol><p>稀缺会导致一个人习惯性地透支未来的资源，长期来看，借用会让一个人更加匮乏。</p><p>透支信用卡、借高利贷都是在透支未来的金钱，来解决当前的紧急状况。</p><p>时间也经常被借用，这周的工作没有做完要拖到下一周，下周的事再拖到下下周，一直拖会长期处在稀缺状态里，让人彻底忽视时间管理、精力管理等提高工作效率的方法。</p><blockquote><p>永远陷入deadline的无限循环</p></blockquote><ol start="3"><li><strong>稀缺会导致没有余闲</strong></li></ol><p>余闲就是我们剩余下来的、没有利用上的时间和空间。穷人为什么感觉生活特别累，是因为什么都缺，导致没有余闲。</p><p>稀缺的本质就是没有余闲，余闲可能会让一个人的效率不是那么高，但是它带来的正向收益却是非常高的，是一种奢侈的心理享受。</p><p>任何系统留一定的余闲都非常重要，它不是对资源的浪费，而是让系统更加高效运转的保证。</p><blockquote><p>永远为自己留下多余的时间，以便应对突发状况</p></blockquote><ol start="4"><li><strong>稀缺会引发带宽的不足</strong></li></ol><p>带宽是我们的计算能力、关注能力、决策能力、执行能力和抵制诱惑能力的统称。我们平时最多只能关注七件事，如果超过了七件事就会引起带宽负担。</p><p>带宽不足还会引起他们认知能力的下降。</p><blockquote><p>人的精力有限，开了太多程序，不就会卡死机了嘛！！</p><p>所以啊，996真的是开倒车，<a href="996.icu">996.icu</a></p></blockquote><h3><span id="作者介绍"> 作者介绍</span></h3><p>塞德希尔·穆来纳森（Sendhil Mullainathan）</p><p>哈佛大学终身教授，哈佛大学行为经济学领域重要领头人。与普林斯顿大学心理学教授埃尔德·沙菲尔等人联合创立非营利性组织<strong>ideas42</strong>，致力于利用行为科学帮助人们解决社会问题。</p><p>在麻省理工学院，与《贫穷的本质》作者阿比吉特·班纳吉等人联合创立“贫困行动实验室”，并于2002年荣获“麦克阿瑟天才奖”。</p><p>埃尔德·沙菲尔（Eldar Shafir）</p><p>1988年，获得麻省理工学院认知科学博士学位。古根海姆奖获得者。</p><p>普林斯顿大学心理学教授，研究领域涉及认知科学、判断与决策、行为经济学等。</p><p>与诺贝尔经济学奖获得者彼得· 戴蒙德和著名心理学家阿莫斯·特沃斯基共同开展过“货币幻觉”方面的研究。</p><h3><span id="目录"> 目录</span></h3><p><img src="https://i.loli.net/2019/04/01/5ca213be34b93.png" alt=""></p><h3><span id="下载地址"> 下载地址</span></h3><p>关注微信公众号：<strong>产品汪darer</strong>，后台回复关键词：<strong>稀缺</strong>，即可下载</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;稀缺你是怎么不断陷入deadline循环的&quot;&gt; 《稀缺》：你是怎么不断陷入deadline循环的？&lt;/span&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;每一位产品人都应该多看书，读好书，多思考&lt;br&gt;
只有这样才能不断进步&lt;/p&gt;
&lt;/blockq
      
    
    </summary>
    
      <category term="产品书单" scheme="https://darerd.github.io/categories/%E4%BA%A7%E5%93%81%E4%B9%A6%E5%8D%95/"/>
    
    
      <category term="产品书单" scheme="https://darerd.github.io/tags/%E4%BA%A7%E5%93%81%E4%B9%A6%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>问答-特斯拉入局，蔚来们是在裸泳吗？</title>
    <link href="https://darerd.github.io/2019/03/29/%E9%97%AE%E7%AD%94-%E7%89%B9%E6%96%AF%E6%8B%89%E5%85%A5%E5%B1%80%EF%BC%8C%E8%94%9A%E6%9D%A5%E4%BB%AC%E6%98%AF%E5%9C%A8%E8%A3%B8%E6%B3%B3%E5%90%97%EF%BC%9F/"/>
    <id>https://darerd.github.io/2019/03/29/问答-特斯拉入局，蔚来们是在裸泳吗？/</id>
    <published>2019-03-29T12:11:51.000Z</published>
    <updated>2019-03-29T13:00:05.270Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>俗话说：“三人行，必有我师”</p><p>看看同行们是怎么分析问题的</p></blockquote><p><code>以下内容来自产品相关社区，如有侵权，请联系删除</code></p><p>[TOC]</p><h3><span id="q1-特斯拉入局蔚来们是在裸泳吗"> :   特斯拉入局，蔚来们是在裸泳吗？</span></h3><blockquote><p>国内新能源汽车的领斗羊蔚来汽车在2018年成功完成了交付1万辆的Flag，然而却被前员工爆出1W辆部分是在蔚来对内部员工的激励措施下内部员工的购买，实际用户购买的出货量比对外公布的小，退货量也比外界想象的大。</p></blockquote><p><code>author:猫黎 @PMCAFF</code></p><p><strong>Answer</strong></p><p>对于蔚来汽车的体验，我得到了正反两方面的反馈。</p><p>我的数位预订了蔚来汽车的朋友纷纷表示，ES8的补贴前售价44.80~54.80万元，若采用电池租赁方案，加上补贴，算下来顶配38万。</p><p>“便宜啊，然后性能和特斯拉一模一样。” “蔚来汽车还有特斯拉做不到的，以用户的感受为第一，我都打算坐地铁去提车了，他们主动过来接我。”小伙伴们说。</p><blockquote><p>性能和特斯拉一模一样，这位用户是认真的吗?!😂</p></blockquote><p>我听说，蔚来汽车经常组织购车者线下各种活动，以增强社交黏性。</p><p>当然，黑ES8的理由更多。</p><p>这款车是由江淮汽车代工的。毕竟江淮汽车是以5.68万起的瑞风S3为主打的低端车品牌，而蔚来ES8定位于中高端SUV，对标的是奥迪Q5等。二者甚是违和，江淮能够做高端车吗？</p><p>这款车的尾标是江淮蔚来，很多车主刚提车就“抠尾标”。</p><blockquote><p>江淮蔚来、华晨宝马😂</p></blockquote><p><img src="http://img.pmcaff.com/12b1ee9dd631e95312f193dfc9d560d6-picture" alt="12b1ee9dd631e95312f193dfc9d560d6-picture"></p><p>此外，充电问题。</p><p>周末，我逛了下特斯拉体验中心，销售小姐以平静中不失骄傲的语气对我说：“特斯拉的充电桩遍布全国，而蔚来汽车是电池更换坞，电池装装拔拔。”</p><p>蔚来汽车的一键加电预约，对于远途而言，也略有些搞笑。</p><p><img src="http://img.pmcaff.com/79cb5494856bb7936666298b0bfaefaf-picture" alt="79cb5494856bb7936666298b0bfaefaf-picture"></p><p>一个关键词</p><p>如果蔚来汽车有一个关键词，毫无疑问，是“烧钱”。李斌曾说：“200亿元是造车的门槛。”</p><blockquote><p>凡是亏损，都不是最好的商业模式</p></blockquote><p>根据招股说明书，2016年/2017年/2018上半年，蔚来汽车的收入是0元、0元、4600万元人民币。同期的亏损，分别是25.69亿、50.13亿、33.21亿人民币。累计亏损约为109亿元。</p><p><img src="http://img.pmcaff.com/21473ce5f45cca780be00c65706cbb9e-picture" alt="21473ce5f45cca780be00c65706cbb9e-picture"></p><p>（上表的货币单位为：百万元人民币）</p><p>自2015年始，包括高瓴资本、腾讯、顺为资本、红杉资本、淡马锡、IDG、百度、厚朴、刘强东等超过50家知名投资机构，前前后后共融资6轮，累积募资约169亿元人民币。此外，有12.6亿元贷款。上市之前，最后一轮融资的估值是47亿美元。</p><p>此次IPO，募集资金约为10.15亿美元，折合70亿元人民币。</p><p><img src="http://img.pmcaff.com/32383f9d504d8e7744c987516fd03925-picture" alt="32383f9d504d8e7744c987516fd03925-picture"></p><p>如此巨资，所费如何？</p><p>最大头是研发费。2016年/2017年/2018上半年，蔚来汽车的研发费用分别是14.7亿、26.0亿、14.6亿元。</p><p>两厢对照，2017年比亚迪/长城/Tesla的研发费用分别为63亿、34亿、90亿元人民币。看起来，蔚来的研发烧钱仍前路漫漫。</p><p><img src="http://img.pmcaff.com/0f48aa5b35ff2960e2613a0402f576a9-picture" alt="0f48aa5b35ff2960e2613a0402f576a9-picture"></p><p>其次是销售和管理费用，2016年/2017年/2018上半年蔚来汽车分别是11.4亿、23.5亿、17.3亿元，其中广告费用分别为2.4亿、5.2亿、2.6亿元。</p><p>蔚来汽车的门店，都在城市最繁华处例如上海中心、太古汇、北京东方广场等，所资不菲，号称单店投入8000万至上亿元。</p><p><img src="http://img.pmcaff.com/6f07e4ba55db8818a5eb9015b4456a1f-picture" alt="6f07e4ba55db8818a5eb9015b4456a1f-picture"></p><p>卖了多少车</p><p>如特斯拉一样，蔚来汽车最为人诟病的，仍是交付连连推迟。</p><p>微博网友@亚东 说：“订的车，蔚来说预计4月交付，后来推到5月、6月、7月，再后来说8月一定交付，现在又说9月一定交付。”</p><p>按照原计划，蔚来在今年三四月交付2000台，实际至7月底仅交付481台。</p><p>李斌全年的目标仍是1万台，还为此与另外一家小鹏汽车创始人打赌。</p><p><img src="http://img.pmcaff.com/4da18d4c9979e7a68b9c522c4c3f8391-picture" alt="4da18d4c9979e7a68b9c522c4c3f8391-picture"></p><p>目前，蔚来汽车的未交付订单有1.7万个。其中1.2万支付了5000元意向金，可退还；另外0.5万已支付了4.5万定金，不可退。</p><p>对比一下特斯拉，在2010~2017年分别交付1542台、2369台、4424台、2.4万、3.4万、5.3万、7.6万、10.3万台。2018上半年交付7.1万台。</p><p>从产量的角度，蔚来汽车基本处在特斯拉2010~2011年的水平。</p><p>即便是特斯拉，也身处漩涡，新车型的大规模量产屡遭挑战。</p><p>Elon Musk在去年8月份闹出一场“私有化”闹剧，就是因为股票价格的剧烈波动、以及季度财报周期的巨大压力。Musk说：“特斯拉是股市历史上最被做空的个股，存在大量想攻击特斯拉的人。”</p><p>特斯拉至今仍在亏损。2018年二季报显示，特斯拉亏损7.2亿美元，同比扩大85.29%；一季度净亏损7.85亿美元。</p><p>对于蔚来汽车而言，可能最坏的消息是国内汽车销量正在全面下滑。</p><p><img src="http://img.pmcaff.com/e478e1f7d3bd6feab5d852ab2bb7f7dc-picture" alt="e478e1f7d3bd6feab5d852ab2bb7f7dc-picture"></p><p>自称是“造车新势力”的互联网汽车人，李斌只是其中之一，还有小鹏汽车、奇点汽车、威马汽车等，如雨后春笋遍地开花，个个都想成为“中国特斯拉”。</p><p>这种愿景，自然是美好的。但是最终谁可以到达彼岸，我们并不知道。</p><blockquote><p>不知道真假，反正各大媒体都在讲“2019年是造车新势力的洗牌之年”，是否为真，吃瓜群众在看</p></blockquote><h3><span id="q2为什么传统企业要转型互联网"> ：为什么传统企业要转型互联网？</span></h3><p><code>author:Ariel诗意 @PMCAFF</code></p><p><strong>Answer</strong></p><p>互联网化是大势所趋</p><p>可以这样说，只要传统企业走进一天，那么意味着互联网也必须进入传统企业，比尔盖茨说过一句话：“21世纪是电子商务的时代，未来要么电子商务，要么无商可务”这句话的意思是说：在互联网发展的某一天，未来不再分你是传统企业，我是互联网企业，因为未来都是互联网企业，一个趋势的到来，是没有任何一个人能阻挡得了的，只有选择适应和拥抱，才之与时俱进。</p><p><em>从消费主体的维度看，转型迫在眉睫</em></p><p>以前，企业掌握信息优势和主动权，消费者只能被动接收。随着移动互联网的发展，移动互联技术让消费者掌握了甚至比企业还要多的信息，因此，用户拥有了更大的话语权和选择权。消费群（即社交、本地、移动和个性化消费群）正在崛起，移动互联网所开创的消费者主权时代正在引爆第三次零售革命，一夜之间赋予了渴望消费自由、消费平等、消费民主的消费者巨大的消费主权。没有互联网时，商家跟消费者之间的关系是以信息不对称为基础的—通俗地讲，就是“买的没有卖的精”。有了互联网之后，游戏规则变了。消费者鼠标一点就可以比价、在网上讨论，变得越来越有主动权和话语权。</p><blockquote><p>企业会出现越来越多的后向收费模式，比如削减商品的利润，而在后续的服务、社群等方面下大功夫，会越来越重视品牌效应，越来越重视消费者，越来越重视大数据营销等。</p></blockquote><p><em>利率持续下降——传统企业线下趋势</em></p><p>2014年是品牌电商化的重要一年。传统企业受政策、产业供应链、物价等方面的不利影响，很多品牌、行业出现了毛利率从50%降到30%的情况。随之而来的是产业劳动力效率下降，上游工厂代工的形式走不通了。</p><blockquote><p>用工、用地成本只会越来越高，毛利率会不断下降。当成本提高了，企业想要赚钱就只有两条路：提高商品的质和增加卖出的量。</p></blockquote><p>未来，传统产业的毛利率都会下降到原来的三分之一以下，趋势不可避免。无论企业经营哪类产品，处于哪种领域，都会有互联网企业挑战你。传统企业不仅利率下降、产品压缩，而且价值链正接受挑战。</p><blockquote><p>传统企业受到最大影响的应该是思维的转变，大象转身是比较难的，盘根错节，利益交错，牵一发而动全身。</p></blockquote><p>消费者已经从线上线下走到场景化，传统企业再不转型还能抓住消费者吗？</p><blockquote><p>互联网企业会实体化，实体企业会互联网化，这是未来大趋势。</p></blockquote><h3><span id="q3高德导航会不会革了滴滴打车的命"> ：高德导航，会不会革了滴滴打车的命?</span></h3><blockquote><p>高德地图也可以打车了，你是否还会用滴滴呢？</p></blockquote><p><code>author:尼卡 @PMCAFF</code></p><p><strong>Answer</strong></p><p>高德算是中间商，但是说颠覆滴滴，个人觉得目前来看不太可能，但是这个事情本身对用户对高德都是非常有利的。</p><p>高德涉足网约车市场则是在意料之外又在情理之中。无论是从用户规模、用户习惯、市场竞争以及出行布局这几件维度来看，涉足网约车都有合理之处。</p><p>高德有有7亿用户，从用户习惯来看，涉足网约车是高维打低维。用户用滴滴打车之前，往往需要用高德地图查询路线；很多网约车司机的导航地图也是高德。对司机、用户来说，在打车APP和地图APP之间来回跳转并不方便。高德作为导航软件，本来就是出行的第一入口，做网约车顺理成章。</p><p>再者，高德推出顺风车，还是回归到了一站式公共出行服务平台——这是高德的核心逻辑。早在2017年就接入了滴滴、神州专车、首汽约车、曹操专车、摩拜、ofo这些出行方式。这次自己加入顺风车功能，本质上是对出行服务的补充。</p><p>但是如果说类似滴滴乘客出事这种问题，对于高德叫车这种“中间商”，如果乘客是从高德叫的车，那么对于高德来说是否也应当负一定责任？另外高德如何保证下游对接的打车平台的服务能力足够也是一个问题。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;俗话说：“三人行，必有我师”&lt;/p&gt;
&lt;p&gt;看看同行们是怎么分析问题的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;以下内容来自产品相关社区，如有侵权，请联系删除&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3&gt;&lt;span id=
      
    
    </summary>
    
      <category term="产品问答" scheme="https://darerd.github.io/categories/%E4%BA%A7%E5%93%81%E9%97%AE%E7%AD%94/"/>
    
    
      <category term="产品问答" scheme="https://darerd.github.io/tags/%E4%BA%A7%E5%93%81%E9%97%AE%E7%AD%94/"/>
    
  </entry>
  
  <entry>
    <title>产品书单-《增长黑客》-增长是产品人永远的追求</title>
    <link href="https://darerd.github.io/2019/03/28/%E4%BA%A7%E5%93%81%E4%B9%A6%E5%8D%95-%E3%80%8A%E5%A2%9E%E9%95%BF%E9%BB%91%E5%AE%A2%E3%80%8B-%E5%A2%9E%E9%95%BF%E6%98%AF%E4%BA%A7%E5%93%81%E4%BA%BA%E6%B0%B8%E8%BF%9C%E7%9A%84%E8%BF%BD%E6%B1%82/"/>
    <id>https://darerd.github.io/2019/03/28/产品书单-《增长黑客》-增长是产品人永远的追求/</id>
    <published>2019-03-28T11:49:31.000Z</published>
    <updated>2019-03-28T14:03:47.928Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="增长黑客-增长是产品人永远的追求"> 《增长黑客》-增长是产品人永远的追求</span></h1><blockquote><p>每一位产品人都应该多看书，读好书，多思考<br>只有这样才能不断进步</p></blockquote><p><strong>今天推荐一本特别棒的书：<u>《增长黑客》</u>：增长是产品人永远的追求</strong></p><h3><span id="写在前面的话"> 写在前面的话：</span></h3><p>如果去豆瓣检索：增长黑客，会发现有两本名字一样的书</p><p><img src="https://i.loli.net/2019/03/28/5c9cb7968cb41.png" alt=""></p><p><strong>这里为大家推荐的是由 增长黑客之父-<u>肖恩·埃利斯</u>所著的《增长黑客》</strong></p><p>肖恩·埃利斯在2010年提出了增长黑客的概念，但是其著作《增长黑客：如何低成本实现爆发式成长》在七年后才引入中国。范冰老师于2015年也写了一本《增长黑客》。</p><p>这两本书我都有看过，个人认为肖恩·埃利斯的著作更加深刻，因为这本著作是作者基于其工作业务整理所著，作者对增长的理解更加深刻！！！</p><p><strong>所以，我更倾向为大家推荐<u>肖恩·埃利斯</u>所著的《增长黑客》</strong></p><h3><span id="增长黑客如何低成本实现爆发式成长"> 《增长黑客：如何低成本实现爆发式成长》</span></h3><p><code>肖恩·埃利斯</code></p><p><img src="https://i.loli.net/2019/03/28/5c9cb9850b63c.png" alt=""></p><h3><span id="内容介绍"> 内容介绍</span></h3><blockquote><p>文中提出了一些有趣的观点</p></blockquote><p>“If you are not growing , then you are dying！”</p><p>敏捷开发的核心是加快开发速度，强调迅速编程，然后定期测试并进行产品迭代。精益创业同样注重快速开发和高频率测试，并且强调尽快推出一个“最简化可实行产品”（minimum viable product）使用户能够尽快使用，以便尽早获得真实的用户反馈，确保公司业务具有可行性。增长黑客方法采用了这两个理念中持续改进和快速迭代的做法，将之用于客户和收入增长。</p><p>所有的增长负责人都应具备一些基本的技能：<strong>能够熟练进行数据分析、精通或熟悉产品管理（即开发与发布产品的过程），以及了解如何设计并开展试验</strong>。每一个增长负责人也都必须熟知促进用户增长的方法以及团队所负责产品或服务的用法。</p><p>增长黑客的基本原则之一就是在确定你的产品是否不可或缺、为何不可或缺以及对谁来说不可或缺之前不要进入快节奏试验阶段</p><p>增长黑客并不是要以最快的速度随意尝试各种想法，看哪个能奏效，而是通过快速的试验寻找并优化最具增长潜力的因素。</p><p>摩擦让人厌烦，这一点我们都深有体会。但需要小心的是，我们很容易注意到自己使用的产品的摩擦，但往往看不到自己参与开发或者参与营销的产品的摩擦</p><p>获取、激活和留存客户的终极目标当然是从他们身上获取收益，并且逐渐提高每位用户带来的收益，也就是提高用户的终身价值。</p><h3><span id="作者介绍"> 作者介绍</span></h3><p>肖恩·埃利斯（Sean Ellis）：<a href="https://growthhackers.com/" target="_blank" rel="noopener">增长黑客网络社区</a> <a href="http://GrowthHackers.com" target="_blank" rel="noopener">GrowthHackers.com</a> 的联合创始人兼 CEO 。网站拥有 180 万全球用户。肖恩于 2010 年提出了“增长黑客”一词，也是增长黑客大会的发起人。创业公司和财富 100 强企业的商业智库。《纽约时报》《华尔街日报》《连线》《快公司》、 <a href="http://Inc.com" target="_blank" rel="noopener">Inc.com</a> 和 TechCrunch 等诸多媒体都对他进行过报道。</p><p>这是前几年，范增老师对肖恩·埃利斯的一个<a href="https://www.lieyunwang.com/archives/443272" target="_blank" rel="noopener">专访</a>。</p><h3><span id="目录"> 目录</span></h3><p><img src="https://i.loli.net/2019/03/28/5c9cd133a60d8.png" alt=""></p><h4><span id="下载地址"> 下载地址</span></h4><p>关注微信公众号：<strong>产品汪darer</strong>，后台回复关键词：<strong>增长黑客@肖恩·埃利斯</strong>，即可下载</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;增长黑客-增长是产品人永远的追求&quot;&gt; 《增长黑客》-增长是产品人永远的追求&lt;/span&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;每一位产品人都应该多看书，读好书，多思考&lt;br&gt;
只有这样才能不断进步&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;st
      
    
    </summary>
    
      <category term="产品书单" scheme="https://darerd.github.io/categories/%E4%BA%A7%E5%93%81%E4%B9%A6%E5%8D%95/"/>
    
    
      <category term="产品书单" scheme="https://darerd.github.io/tags/%E4%BA%A7%E5%93%81%E4%B9%A6%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>随想-如果脱离现有的平台，你还剩下什么？</title>
    <link href="https://darerd.github.io/2019/03/27/%E9%9A%8F%E6%83%B3-%E5%A6%82%E6%9E%9C%E8%84%B1%E7%A6%BB%E7%8E%B0%E6%9C%89%E7%9A%84%E5%B9%B3%E5%8F%B0%EF%BC%8C%E4%BD%A0%E8%BF%98%E5%89%A9%E4%B8%8B%E4%BB%80%E4%B9%88%EF%BC%9F/"/>
    <id>https://darerd.github.io/2019/03/27/随想-如果脱离现有的平台，你还剩下什么？/</id>
    <published>2019-03-27T15:18:05.000Z</published>
    <updated>2019-03-27T15:19:27.135Z</updated>
    
    <content type="html"><![CDATA[<center><b><font size="5">2019/1/8-如果有一天你脱离了现在的平台，<br>你还能剩下什么？</font></b></center><hr><blockquote><p>说在前面的话：</p><blockquote><p>脱离平台的“硬件”，你还有平台带给你的“软件”</p></blockquote></blockquote><hr><center>先介绍下自己：现就读于安徽一985高校，本科毕业于河南一211高校</center><hr><center>我会从以下两个方面阐述观点：</center><center>1. 平台带给我哪些“软件”</center><center>2. 我的看法</center><hr><ol><li>平台带给我哪些软件</li></ol><ul><li><p><u>开拓视野</u></p><p>在这里，我获得了与全国顶级高校的学生交流的机会(有幸去上海同济参加了一个两岸三地的创新创业比赛)；<br>这是我第一次接触创业比赛、接触路演、接触另一种社会形态培养出来的学生，真的是一种打开异世界的感觉；在心底埋下了一颗种子，从此看世界的角度和思维都在慢慢改变。<br><mark>平台越高、看得越远。</mark></p></li><li><p><u>自信心</u></p><p>在这里，我参加了学校和百度举办的创新创业活动，和来自全国高校的小伙伴同台竞技，并且取得了不错成绩；<br>这次让我认识到，自己并没有那么差和不堪，给一个机会，有信心做到更好；<br><mark>平台会给你自信心。</mark></p></li><li><p><u>人脉&amp;资源</u></p><p>在这里，我认识了各种各样优秀的人；他们各有所长，都对自己给予了帮助和启发；<br>在为院系运营公众号时，结识一位朋友A；通过A，加入了学校团委下属的一个部门，幸运的有一次机会去同济参加了活动，认识了港理工B；后来我们一起参加百度的活动，获得了不错的成绩。<br><mark>人脉&amp;资源就像一个雪球，它会越滚越大，为你带来更多的机会。</mark></p></li><li><p><u>机会</u></p><p>平台会提高你获得机会的几率，<br>还是那句老话：<mark>机会是给有准备的人的</mark><br>所以：<mark>积极进取、以终为始</mark></p></li></ul><ol start="2"><li>我的看法</li></ol><ul><li>人生就是一场赌局，平台越高，权限越高，筹码越多，赢得几率就越大；</li><li>如果你不进取，无法和平台的高度匹配，那就如同<em>风口上的猪，风没了，猪摔死了</em> ；</li><li>人生如梯子，当第N阶以下台阶撤掉的时候，你只要在N+1阶就可以了。</li></ul><hr><blockquote><p>别人传播焦虑，我传递积极</p><p>以上仅为我个人见解</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;center&gt;&lt;b&gt;&lt;font size=&quot;5&quot;&gt;2019/1/8-如果有一天你脱离了现在的平台，&lt;br&gt;你还能剩下什么？&lt;/font&gt;&lt;/b&gt;&lt;/center&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;说在前面的话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;脱离平台的“硬件
      
    
    </summary>
    
      <category term="随想" scheme="https://darerd.github.io/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
      <category term="随想" scheme="https://darerd.github.io/tags/%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>方法论-用户画像知识进阶</title>
    <link href="https://darerd.github.io/2019/03/27/%E6%96%B9%E6%B3%95%E8%AE%BA-%E7%94%A8%E6%88%B7%E7%94%BB%E5%83%8F%E7%9F%A5%E8%AF%86%E8%BF%9B%E9%98%B6/"/>
    <id>https://darerd.github.io/2019/03/27/方法论-用户画像知识进阶/</id>
    <published>2019-03-27T15:10:43.000Z</published>
    <updated>2019-03-27T15:11:14.419Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="用户画像的架构"> <strong>用户画像的架构</strong></span></h1><blockquote><p>内容转载于：<code>https://www.iamue.com/34391</code><br>作者：<code>秦路</code></p></blockquote><p><code>原文很长，干货很多，为了便于理解，我把文章拆分为了三期</code></p><p><code>今天介绍第三期：用户画像的进阶</code></p><hr><p>不同业务的画像标签体系并不一致，这需要数据和运营目的性的提炼。</p><p>用户画像一般按业务属性划分多个类别模块。除了常见的人口统计，社会属性外。还有用户消费画像，用户行为画像，用户兴趣画像等。具体的画像得看产品形态，像金融领域，还会有风险画像，包括征信、违约、洗钱、还款能力、保险黑名单等。电商领域会有商品的类目偏好、品类偏好、品牌偏好，不一而足。</p><p><img src="https://i.loli.net/2019/03/12/5c8798fecc96e.jpg" alt=""></p><p>上图是随手画的的例子，画一个架构不难，难得是了解每个标签背后的业务逻辑和落地方式，至于算法，又能单独扯很多文章了。</p><p><strong>从数据流向和加工看，用户画像包含上下级递进关系。</strong></p><p>以上文的流失系数举例，它通过建模，其依赖于用户早期的历史行为。而用户早期的历史行为，即10天内的消费金额、消费次数、登录次数等，本身也是一个标签，它们是通过原始的明细数据获得。</p><p><img src="https://i.loli.net/2019/03/12/5c8799bc799c7.jpg" alt=""></p><p>上图列举了标签加工和计算的过程，很好理解。最上层的策略标签，是针对业务的落地，运营人员通过多个标签的组合形成一个用户群组，方便执行。</p><p>公司越大，用户画像越复杂。某家主打内容分发的公司进入了全新的视频领域，现在有两款APP，那么用户画像的结构也需要改变。既有内容相关的标签，也有视频相关的标签，两者是并行且关联的。</p><p>比如A用户在内容标签下是重度使用，而在视频标签下是轻度。比如B用户很久没打开内容APP有流失风险，但在视频APP的使用时长上看很忠诚。如此种种，看的是灵活应用。当然，姓名性别这类人口统计标签，是通用的。</p><p><strong>用户画像作为平台级的应用，很多运营策略及工具，都是在其基础上构建的。</strong></p><p><img src="https://i.loli.net/2019/03/12/5c8799a7220b2.jpg" alt=""></p><p>基于营销和消费相关的标签，新客、老客、用户的流失和忠诚、用户的消费水平和频率等，都是构成CRM（客户关系管理）的基础，可能大家更习惯叫它用户/会员管理运营平台。</p><p>它的作用在于，将数据化的标签，转换成产品运营策略。不同的标签对应不同的用户群体，也对应不同的营销手段。CRM的结构中会包含各类触达用户的常用渠道比如短信、邮件、推送等。也包含CMS（内容管理系统），执行人员通过其快速配置活动页、活动通道、优惠券等，靠营销活动拉动数据。</p><p>老王的沙拉业务要是做大，那么运营平台就会以图中的结构搭建。老王在CRM中组合标签，新客老客流失客的数据借助BI监控，然后通过CMS系统配置红包啊优惠券啊等等，再通过短或Push触达。</p><p>好的用户画像系统，既是数据生态体系，也是业务和运营的生态体系，它是一门复杂的交叉领域。</p><p>万千用法，存乎一心。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;用户画像的架构&quot;&gt; &lt;strong&gt;用户画像的架构&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;内容转载于：&lt;code&gt;https://www.iamue.com/34391&lt;/code&gt;&lt;br&gt;
作者：&lt;code&gt;秦路&lt;
      
    
    </summary>
    
      <category term="方法论" scheme="https://darerd.github.io/categories/%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
    
    
      <category term="用户画像" scheme="https://darerd.github.io/tags/%E7%94%A8%E6%88%B7%E7%94%BB%E5%83%8F/"/>
    
  </entry>
  
  <entry>
    <title>方法论-如何建立正确的用户画像？</title>
    <link href="https://darerd.github.io/2019/03/27/%E6%96%B9%E6%B3%95%E8%AE%BA-%E5%A6%82%E4%BD%95%E5%BB%BA%E7%AB%8B%E6%AD%A3%E7%A1%AE%E7%9A%84%E7%94%A8%E6%88%B7%E7%94%BB%E5%83%8F%EF%BC%9F/"/>
    <id>https://darerd.github.io/2019/03/27/方法论-如何建立正确的用户画像？/</id>
    <published>2019-03-27T15:09:28.000Z</published>
    <updated>2019-03-27T15:10:00.551Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="如何建立正确的用户画像"> <strong>如何建立正确的用户画像</strong></span></h1><blockquote><p>内容转载于：<code>https://www.iamue.com/34391</code><br>作者：<code>秦路</code></p></blockquote><p><code>原文很长，干货很多，为了便于理解，我把文章拆分为了三期</code></p><p><code>今天介绍第二期：正确使用用户画像</code></p><hr><p><strong>用户画像首先是基于业务模型的</strong>。业务部门连业务模型都没有想好，数据部门只能巧妇难为无米之炊。数据部门也别关门造车，这和做产品一样，连用户需求都没有理解透彻，匆匆忙忙上线一个APP，结果无人问津。</p><p>理解消费者的决策，考虑业务场景，考虑业务形态，考虑业务部门的需求…这些概念说得很虚，但是一个好的用户画像离不开它们。本文没有说数据、模型和算法，是我认为，它们比技术层面更重要。</p><p>我们从一个故事开始设立用户画像吧。</p><p>老王是一家互联网创业公司的核心人员，产品主营绿色健康沙拉，老王和绿色比较搭嘛。这家公司推出了APP专卖各式各样的沙拉，现在需要建立用户画像指导运营。</p><p>公司现阶段在业务层面，更关注营销和销售：如何将沙拉卖得更好。</p><p>下图是老王简单梳理的运营流程。</p><p><img src="https://i.loli.net/2019/03/12/5c8795db168fd.png" alt=""></p><p>老王将顾客按是否购买过沙拉，划分成潜在用户和新客。潜在用户是注册过APP但还没有下单，新客是只购买过一次沙拉的用户，除此以外还有老客，即消费了两次及以上的人群。</p><p>为了便于大家理解，我用<code>JSON</code>格式表示一个简易的用户画像。</p><p><img src="https://i.loli.net/2019/03/12/5c8795fbe4cbe.png" alt=""></p><p>为什么独立出新客标签？因为老王的沙拉针对未消费用户会有新人红包引导消费，万事开头难。这也带来新客一次后不再消费的问题，所以需要潜在、新客、老客的划分。</p><p>作为一个有追求的运营人员，划分老客也是不够，这里继续用户分层。</p><p>传统的分层用<strong>RFM三个维度</strong>衡量，沙拉的客单价比较固定，F和M取一个就够用了。老王现在计算不同消费档次的用户留存度差异，譬如某时间段内消费达XX元的用户,在未来时间段是否依旧消费。</p><blockquote><p>RFM模型是衡量客户价值和客户创利能力的重要工具和手段<br>最近一次消费 (Recency)<br>消费频率 (Frequency)<br>消费金额 (Monetary)</p></blockquote><p>沙拉这类餐饮是高频消费，XX应该选择一个较窄的时间窗口，统计365天内的消费意义不大。还有一点需要注意的是，沙拉不同季节的销量是有差异的，冬天沙拉肯定卖的不如夏天，要综合考虑消费分布。</p><p>这里姑且定义，30天内消费200元以上为VIP用户。老王的生意如果特别好，也可以继续划分超级VIP。这种标签往往配合业务，譬如VIP有赠送饮料，优先配送的权益。非VIP人群，也需要激励往VIP发展。</p><p>画像的人口统计属性，老王靠用户填写订单上的收货人姓名搞定。籍贯年龄这几个，对沙拉生意没有特别大的帮助，难道为四川籍用户提高麻辣沙拉？</p><p>用户地址，可以通过收货地设立规则判断，比如某个地址出现X次，可以将其认为常用地地址。再依据送货地在写字楼还是学校，推算用户是白领还是学生。</p><p>老王针对不同属性的人群，采取了特殊的运营策略。像学生群体，因为7,8月份是暑假，所以老王提前预估到校园地区的销售额下降。当9月开学季，又能对返校学生进行召回。</p><p>白领相关的群体，更关注消费体验，对价格敏感是次要的。如果平台女用户的消费占比高，老王就主打减肥功能的沙拉，并且以包月套餐的形式提高销量。</p><p><img src="https://i.loli.net/2019/03/12/5c87961ae6fd7.jpg" alt=""></p><p>以一家沙拉店来看，老王的用户画像已经不错了，但他还是焦头烂额，因为用户流失率开始上升。用户流失有各种各样的原因：对手老李沙拉的竞争、沙拉的口味、用户觉得性价比不高、老王不够帅等。</p><p>流失是一个老大难的预测问题。老王对流失用户的定义是30天没有消费。想要准确预测，这里得尝试用机器学习建模，技术方面先这里略过。<strong>所谓建模，最好要找到用户开始不消费的时间点之前的关键因素，可是是行为，可以是属性。</strong></p><p>用户历史窗口内消费金额少，有可能流失；用户历史窗口内消费频次低，有可能流失；用户历史窗口内打开APP次数少，有可能流失；用户给过差评，有可能流失；用户等餐时间长，有可能流失；用户的性别差异，有可能流失；餐饮的季度因素，有可能流失…</p><p>老王依据业务，挑选了可能影响业务的特征，提交给数据组尝试预测流失。需要注意的是，这些用户行为不能反应真实的情况。<strong>大家不妨想一下，流失用户的行为，是不是一个动态的变化过程？</strong></p><p>我曾经消费过很多次，但是突然吃腻了，于是减少消费次数，再之后不怎么消费，最终流失。单位时间段内的消费忠诚度是梯度下降的，为了更好的描述变化过程，将时间窗口细分成多个等距段。前30-20天、前20~10天、前10天内，这种切分比前30天内可以更好地表达下降趋势，也更好的预测流失。</p><p><strong>从老王的思路看，所谓流失，可以通过用户行为的细节预判</strong>。机器学习的建模虽然依赖统计手段，也离不开业务洞察。这里再次证明，用户画像建立在业务模型上。</p><p>流失概率解决了老王的心头之患，通过提前发现降低流失用户。挽回流失推行一段时间后，老王发现虽然流失用户减少了，但是成本提高了，因为挽回用户也是要花钱的呀。亏本可不行，老王心头又生一计，他只挽回有价值的，那种拿了红包才消费的用户老王他不要了！老王要的是真爱粉。于是他配合消费档次区别对待，虽然流失用户的数量没有控制好，但是利润提高了。</p><p>上述的用户画像，没有一个标签脱离于业务之外。基于业务场景，我们还能想象很多用户画像的玩法。沙拉有不同的口味，蔬果鸡肉海鲜。用户的口味偏好，可以用矩阵分解、模糊聚类或者多分类的问题计算，也以0～1之间的数字表示喜好程度，相似的，还有价格偏好，即价格敏感度。</p><p><img src="https://i.loli.net/2019/03/12/5c87963bdca19.jpg" alt=""></p><p>再深入想一下业务场景，如果某个办公地点，每天都有五六笔的订单，分属不同的客户不同的时间段，外卖小哥得送个五六次，对人力成本是多大的浪费呀。运营可以在后台分析相关的数据，以团购或拼单的形式，促成订单合并，或许销售额的利润会下降，但是外卖的人力成本也节约了。这也是用画像作为数据分析的依据。</p><p>老王的运营故事说完了，现在对用户画像的建立有一套想法了吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;如何建立正确的用户画像&quot;&gt; &lt;strong&gt;如何建立正确的用户画像&lt;/strong&gt;&lt;/span&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;内容转载于：&lt;code&gt;https://www.iamue.com/34391&lt;/code&gt;&lt;br&gt;
作者：&lt;
      
    
    </summary>
    
      <category term="方法论" scheme="https://darerd.github.io/categories/%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
    
    
      <category term="用户画像" scheme="https://darerd.github.io/tags/%E7%94%A8%E6%88%B7%E7%94%BB%E5%83%8F/"/>
    
  </entry>
  
  <entry>
    <title>方法论-啥是用户画像？只是用户的标签吗？</title>
    <link href="https://darerd.github.io/2019/03/27/%E6%96%B9%E6%B3%95%E8%AE%BA-%E5%95%A5%E6%98%AF%E7%94%A8%E6%88%B7%E7%94%BB%E5%83%8F%EF%BC%9F%E5%8F%AA%E6%98%AF%E7%94%A8%E6%88%B7%E7%9A%84%E6%A0%87%E7%AD%BE%E5%90%97%EF%BC%9F/"/>
    <id>https://darerd.github.io/2019/03/27/方法论-啥是用户画像？只是用户的标签吗？/</id>
    <published>2019-03-27T15:06:38.000Z</published>
    <updated>2019-03-27T15:07:37.812Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="啥是用户画像只是用户的标签吗"> 啥是用户画像？只是用户的标签吗？</span></h2><blockquote><p>内容转载于：<code>https://www.iamue.com/34391</code><br>作者：<code>秦路</code></p></blockquote><p><code>原文很长，干货很多，为了便于理解，我把文章拆分为了三期</code></p><p><code>今天介绍第一期：认识用户画像</code></p><hr><p>用户画像是一个挺新颖的词，最初它是大数据行业言必及之的时髦概念。现在我们运营谈及用户画像，它也是和精准营销、精细化运营直接钩挂的。这篇文章主要讲产品和运营角度的用户画像。</p><p>希望看完后，解决你一切关于用户画像的疑问。</p><h3><span id="什么是用户画像"> <strong>什么是用户画像</strong></span></h3><p>用户画像一点也不神秘，它是根据用户在互联网留下的种种数据，主动或被动地收集，最后加工成一系列的标签。比如猜用户是男是女，哪里人，工资多少，有没有谈恋爱，喜欢什么，准备剁手购物吗？</p><p><img src="https://i.loli.net/2019/03/12/5c8794c758e6d.jpg" alt=""></p><p><strong>我们常把用户标签和用户画像对等。</strong></p><p>但凡用户画像的文章，类似上文图片都会出现，有用烂的趋势。</p><p><strong>标签化是最直观的解释，但它不等于用户画像。</strong></p><p><strong>用户画像的正式名称是User Profile，大家往往把它和User Persona混淆，后者更恰当的名字是用户角色。是产品设计和用户调研的一种方式方法</strong>。当我们讨论产品、需求、场景、用户体验的时候，往往需要将焦点聚集在某类人群上，用户角色便是一种抽象的方法，是目标用户的集合。</p><p>用户角色不指代具体的谁。「她是一位25岁的白领，211大学毕业，现在从事于互联网行业的设计工作，居住在北京。单身，平时喜爱摇滚乐」，这段话语，常用来描述产品的典型用户。</p><p><strong>本文谈的User Profile，更多是运营和数据息息相关的平台级应用，本质是对任何一个用户都能用标签和数据描述</strong>。</p><h3><span id="用户画像的应用"> 用户画像的应用</span></h3><p>它在企业迈大迈强的过程中有举足轻重的作用。以下是主要的应用。</p><p><strong>精准营销</strong>：这是运营最熟悉的玩法，从粗放式到精细化，将用户群体切割成更细的粒度，辅以短信、推送、邮件、活动等手段，驱以关怀、挽回、激励等策略。</p><p><strong>数据应用</strong>：用户画像是很多数据产品的基础，诸如耳熟能详的推荐系统广告系统。操作过各大广告投放系统的同学想必都清楚，广告投放基于一系列人口统计相关的标签，性别、年龄、学历、兴趣偏好、手机等等。</p><p><strong>用户分析</strong>：虽然和Persona不一样，用户画像也是了解用户的必要补充。产品早期，PM们通过用户调研和访谈的形式了解用户。在产品用户量扩大后，调研的效用降低，这时候会辅以用户画像配合研究。新增的用户有什么特征，核心用户的属性是否变化等等。</p><p><strong>数据分析</strong>：这个就不用多提了，用户画像可以理解为业务层面的数据仓库，各类标签是多维分析的天然要素。数据查询平台会和这些数据打通。</p><p>对大部分产品，用户画像用不到推荐系统，个性化推荐也提高不了几个利润，毕竟它需要大量的用户和数据作支撑。所以这些产品，更适合以用户画像为基础去驱动业务。</p><p>提了那么多好处，但是据我了解，不少公司，花了一大笔钱招了不少人建设用户画像系统，结果用不起来。或者做了一份用户画像的报告，性别用户地理位置用户消费金额，看上去挺高大上的，看完也就看完了。</p><p>归根结底，难以用好。</p><p><strong>很多用户画像初衷是好的，但是沦为了形式主义。</strong></p><p>举身边的例子，朋友在公司建立用户画像划分了百来个维度。用户消费、属性、行为无所不包。本来这不错啊，但是上线后运营看着这个干瞪眼。</p><p><strong>问题包含但不限于，用户有那么多维度，怎么合理地选择标签？我想定义用户的层级，VIP用户应该累积消费金额超过多少？是在什么时间窗口内？为什么选择这几个标准？后续应该怎么维护和监控？业务发生变化了这个标签要不要改？</strong></p><p>设立好标签，怎么验证用户画像的有效性？我怎么知道这套系统成功了呢？效果不佳怎么办？它有没有更多的应用场景？</p><p>策略的执行也是一个纠结的问题。从岗位的执行看，运营背负着KPI。当月底KPI完不成时，你觉得他们更喜欢选择全量运营，还是精细化呢?</p><p>我想不少公司都存在这样类似情况：使用过用户画像一段时间后，发现也就那么一回事，也就渐渐不再使用。</p><p>这是用户画像在业务层面遇到老大难的问题。虽然企业自称建立用户画像，应用还是挺粗糙的。</p><h3><span id="怎样深入理解用户画像"> <strong>怎样深入理解用户画像</strong></span></h3><p>画虎不全反类汪，想要用好它，首先得深入理解用户画像。</p><p>现在运营按用户生命周期设立了几个标签，比如新用户、活跃用户、流失用户，这些标签当然够细分。但它真的是一个好标签么？不是。</p><p>因为这些都是滞后性的。按流失用户的一般定义，往往是用户很长一段时间没有回应和行动，但是都几个月没有响应了，哪怕知道是流失用户也于事无补。它有价值，但太滞后。</p><p>聪明的运营会设立一个新的标签，最近一次活跃距今天数，用户有六个月没有活跃，那么天数就是180天。这个比单纯的流失用户标签好，能凭此划分不同的距今天数，设立30天，90天，180天的时间节点。</p><p>距今天数也不是最好的。用户有差异，同样两个用户A和B，哪怕不活跃天数相同，我也不能认为它们的流失可能性相等。该问题在低频场景更凸显，旅游APP，半年没有活跃也是正常的，此时距今天数力有未逮。</p><p>回过头看流失用户，我们定义它，不是为了设立一个高大上的系统。任何企业，肯定一开始就希望流失用户越少越好，其次才是如何挽回。这种业务前提下，预防性的减少流失用户比已经流失的标签更重要。</p><p><strong>所以最好的标签的标签是用户流失概率，流失概率&gt;距今消费天数&gt;流失标签。</strong></p><p>不要想当然的归纳一个齐全完备的体系，却忽略了画像的核心价值。<strong>用户画像首先得是商业目的下的用户标签集合。</strong></p><p>猜用户是男是女，哪里人，工资多少，有没有谈恋爱，喜欢什么，准备剁手购物吗？探讨这些是没有意义的。是男是女如何影响消费决策，工资多少影响消费能力，有没有谈恋爱会否带来新的营销场景，剁手购物怎么精准推荐，这些才是用户画像背后的逻辑。</p><p><strong>不是我有了用户画像，便能驱动和提高业务。而是为了驱动和提高业务，才需要用户画像。这是很容易犯的错误。</strong></p><p>用户画像的标签一般通过两种形式获得，基于已有数据或者一定规则加工，流失标签和距今天数皆是。另外一种是基于已有的数据计算概率模型，会用到机器学习和数据挖掘。</p><p><strong>概率是介于0~1之间的数值</strong>。拿性别举例，除非能直接获取用户的身份证信息，用户很少会填写性别，填写的性别也不一定准确，网游中性别为女的扣脚大汉一抓一大把呢。</p><p>这里就要增加一层推断用户真实性别的算法。中国人的性别和名字是强相关，建国建军，翠花翠兰，很容易判断。算法中常用贝叶斯，通过已有的姓名性别库预测新加入的用户性别。</p><p>特殊情况下，不少姓名是中性，男女不辩。像晓晶，可男可女。更特殊的情况，看上去是男性的名字，也有可能是女性，我的初中老师就叫建军，然而是个和蔼可亲的小姐姐。</p><p>特殊情况意味着特殊的概率，所以不能用非此即彼的二分法。所谓概率，它更习惯告诉你，通过模型推断，建军有95％的可能是男性姓名，表示为0.95；晓晶有55％的可能是男性，表示为0.55。</p><p>虽然为了方便，模型会设立阈值，将50％以上的概率默认为男性，以下默认为女性。<strong>但业务部门的同学要清楚，用户标签的本质往往是0～1之间的概率。</strong></p><p>概率型的标签很难验证。某位用户被标上学生标签，要么真的哄他上传学籍证明，否则很难知道他是不是真的学生。这种黑箱情况下，针对学生用户进行营销活动，效果好与不好，都受标签准确率的影响。广告、推荐、精准营销都会遇到这个问题。</p><p>概率肯定有多有少。90%流失概率的用户，和30%流失概率的用户，虽然是模型建立出的预测值，非真实，我们还是会认为前者更有离开的可能性，凭此设立运营策略。</p><p><strong>这带来一个新的问题，如何选择概率的阈值？</strong></p><p>我们想要挽回流失用户，选择80%以上概率的人群，还是60%呢？答案已经说过了，要考虑业务，挽回流失用户是手段不是目的，实际目的是通过挽回流失用户提高利润，那么阈值的选择迎刃而解。计算不同阈值下，挽回用户的收入和成本，选择最优解。</p><p>推而广之，推荐系统也好，广告系统也罢，它们有更复杂的维度、标签、特征，本质也是找出用户最近想不想买车，用户最近想不想旅游。把最合适的信息在最恰当时机推给用户，获取最大的利益。</p><p>我列举的案例，是简化过的。像姓名，在电商和消费行业，除了生理上的性别，还会建立消费模型上的性别标签，有些人虽然是男性，但购物行为是女性，这是要区分的。</p><p>看到这里别怕，想要建好用户画像，说简单不简单，说难也不难。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2&gt;&lt;span id=&quot;啥是用户画像只是用户的标签吗&quot;&gt; 啥是用户画像？只是用户的标签吗？&lt;/span&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;内容转载于：&lt;code&gt;https://www.iamue.com/34391&lt;/code&gt;&lt;br&gt;
作者：&lt;code&gt;秦路&lt;/
      
    
    </summary>
    
      <category term="方法论" scheme="https://darerd.github.io/categories/%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
    
    
      <category term="用户画像" scheme="https://darerd.github.io/tags/%E7%94%A8%E6%88%B7%E7%94%BB%E5%83%8F/"/>
    
  </entry>
  
  <entry>
    <title>软件-Edge浏览器大改版：基于Chromium内核的Edge浏览器终于变好看了</title>
    <link href="https://darerd.github.io/2019/03/25/%E8%BD%AF%E4%BB%B6-Edge%E6%B5%8F%E8%A7%88%E5%99%A8%E5%A4%A7%E6%94%B9%E7%89%88%EF%BC%9A%E5%9F%BA%E4%BA%8EChromium%E5%86%85%E6%A0%B8%E7%9A%84Edge%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BB%88%E4%BA%8E%E5%8F%98%E5%A5%BD%E7%9C%8B%E4%BA%86/"/>
    <id>https://darerd.github.io/2019/03/25/软件-Edge浏览器大改版：基于Chromium内核的Edge浏览器终于变好看了/</id>
    <published>2019-03-25T03:56:06.000Z</published>
    <updated>2019-03-25T03:57:41.388Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="edge浏览器大改版基于chromium内核的edge浏览器终于变好看了"> Edge浏览器大改版：基于Chromium内核的Edge浏览器终于变好看了</span></h1><p>**微软即将推出的基于Chromium内核的Edge浏览器完整安装包已经在线泄露。**泄露的版本似乎是微软预计很快将在公开预览版中发布的早期版本。微软的新版Edge基于Chromium，早期版本包括Chrome扩展支持，收藏夹同步以及对用户界面的一些自定义调整。</p><p>泄露版Edge的开发完成度较高，在Windows 10上运行良好，但是，您可能会从Edge中看到一些还没有完工的地方。例如，微软尚未提供其预留选项卡功能，尚未实现使用手写笔功能的电子墨水特性，而黑暗模式目前只能通过手动打开测试标记获得，就像Google在Chrome中实现它一样。</p><p>另一方面，微软也正在开发适用于Mac的Edge版本，但目前尚不清楚它是否会与新版Edge for Windows版本同时亮相。</p><p><img src="https://i.loli.net/2019/03/25/5c982fcc075ea.png" alt=""></p><p>终于没有了Edge浏览器的塑料感了，质感更强了</p><p><img src="https://i.loli.net/2019/03/25/5c98301f7b516.png" alt=""></p><p><img src="https://i.loli.net/2019/03/25/5c983048ed885.png" alt=""></p><p><img src="https://i.loli.net/2019/03/25/5c9832a25511a.png" alt=""></p><p>账户头像也可以定制了</p><p>目前仅为泄漏版Edge浏览器，仅支持英文，后续若有官方发布，请尽快更新</p><p><a href="https://www.cnbeta.com/articles/it/830535.htm" target="_blank" rel="noopener">转载于网络</a></p><p>若想尝鲜，关注微信公众号：<code>产品汪darer</code></p><p>后台回复：<code>edge浏览器</code>，即可下载</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;edge浏览器大改版基于chromium内核的edge浏览器终于变好看了&quot;&gt; Edge浏览器大改版：基于Chromium内核的Edge浏览器终于变好看了&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;**微软即将推出的基于Chromium内核的Edge浏览器完整安装包
      
    
    </summary>
    
      <category term="软件资源" scheme="https://darerd.github.io/categories/%E8%BD%AF%E4%BB%B6%E8%B5%84%E6%BA%90/"/>
    
    
      <category term="软件资源" scheme="https://darerd.github.io/tags/%E8%BD%AF%E4%BB%B6%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>爬虫-怎么爬静态网站</title>
    <link href="https://darerd.github.io/2019/03/25/%E7%88%AC%E8%99%AB-%E6%80%8E%E4%B9%88%E7%88%AC%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/"/>
    <id>https://darerd.github.io/2019/03/25/爬虫-怎么爬静态网站/</id>
    <published>2019-03-25T03:51:56.000Z</published>
    <updated>2019-03-25T03:53:37.134Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="爬虫-怎么爬静态网站"> 爬虫-怎么爬静态网站</span></h1><p>爬静态网站主要分为两部分：</p><ol><li>爬静态网站的文字</li><li>爬静态网站的图片</li></ol><p>[TOC]</p><h3><span id="爬文字"> 爬文字</span></h3><h4><span id="思路"> 思路</span></h4><ol><li>用<code>requests</code>模块得到网站的HTML</li><li>用<code>BeautifulSoup</code>模块得到HTML的正则文本</li><li>用<code>find</code>或者<code>find_all</code>函数从正则文本中得到自己想要的</li><li>用<code>repalce</code>去除不需要的字符</li></ol><h4><span id="源代码"> 源代码</span></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="comment"># 使脚本可以识别中文</span></span><br><span class="line"><span class="comment"># 爬网站：http://www.hbrchina.org/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="comment"># 调用需要的模块</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">req = requests.get (<span class="string">'http://www.hbrchina.org/2019-02-18/7150.html'</span>)</span><br><span class="line">   <span class="comment"># 得到网站的HTML</span></span><br><span class="line">req.encoding = req.apparent_encoding</span><br><span class="line"><span class="comment">#获取文本原来编码，使两者编码一致才能正确显示</span></span><br><span class="line">html = req.text</span><br><span class="line">bf = BeautifulSoup(html,<span class="string">'html.parser'</span>)</span><br><span class="line">  <span class="comment"># 把HTML文件转为正则文件（我的理解是文本文件）</span></span><br><span class="line">body = bf.body</span><br><span class="line">texts = body.find_all (<span class="string">'div'</span>,&#123;<span class="string">'class'</span>:<span class="string">'article-content'</span>&#125;)</span><br><span class="line">  <span class="comment"># 用find_all函数找到 这样的div文件，其class是article-content</span></span><br><span class="line">print(texts[<span class="number">0</span>].text.replace(<span class="string">'\xa0'</span>*<span class="number">8</span>,<span class="string">'\n\n'</span>))</span><br><span class="line">  <span class="comment"># 用replace函数提出所有的字符、空格等</span></span><br></pre></td></tr></table></figure><h4><span id="可以看到的结果"> 可以看到的结果</span></h4><p><img src="https://i.loli.net/2019/03/24/5c97217a9dc30.png" alt=""></p><h3><span id="爬图片"> 爬图片</span></h3><h4><span id="思路"> 思路</span></h4><ol><li>用requests模块得到网站的HTML</li><li>用BeautifulSoup得到HTML的正则文本</li><li>用find函数从正则文本中得到自己想要的，比如关键词img</li><li>利用urllib模块下载</li><li>利用for语句下载所有图片</li></ol><h4><span id="源代码"> 源代码</span></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests,urllib</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">rep = requests.get(<span class="string">'https://darerd.github.io/2019/03/21/%E9%9A%8F%E6%83%B3-%E6%96%B0%E9%9B%B6%E5%94%AE%E4%BC%81%E4%B8%9A%E2%80%9C%E2%80%9C%E6%99%BA%E8%83%9C%E2%80%9D%E6%9C%AA%E6%9D%A5/'</span>)</span><br><span class="line">rep.encoding = rep.apparent_encoding</span><br><span class="line">html = rep.text</span><br><span class="line">bs = BeautifulSoup(html,<span class="string">'html.parser'</span>)</span><br><span class="line">img = bs.find_all(<span class="string">'img'</span>)</span><br><span class="line"><span class="comment"># 在bs正则文件中找到所有 带有img标签的结果</span></span><br><span class="line">x=<span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> img :</span><br><span class="line">    <span class="comment"># 利用for语句得到每一个图片的src</span></span><br><span class="line">imgsrc = i.get(<span class="string">'src'</span>)</span><br><span class="line">    <span class="comment"># 从img中找到图片的下载链接，src</span></span><br><span class="line">urllib.request.urlretrieve(imgsrc,<span class="string">'./%s.jpg'</span> %x)</span><br><span class="line">    <span class="comment"># 利用urllib模块去下载图片</span></span><br><span class="line">x=x+<span class="number">1</span></span><br><span class="line"><span class="keyword">print</span> (<span class="string">'正在下载: %d '</span>%x)</span><br></pre></td></tr></table></figure><h3><span id="爬虫时必须会用网页源代码"> 爬虫时必须会用网页源代码</span></h3><p>以爬图片为例：</p><p>这是我们要爬的网站：[<a href="https://darerd.github.io/2019/03/21/%E9%9A%8F%E6%83%B3-%E6%96%B0%E9%9B%B6%E5%94%AE%E4%BC%81%E4%B8%9A%E2%80%9C%E2%80%9C%E6%99%BA%E8%83%9C%E2%80%9D%E6%9C%AA%E6%9D%A5/">https://darerd.github.io/2019/03/21/随想-新零售企业““智胜”未来/</a>]</p><p>打开网站后（我用的Chrome浏览器），键盘快捷键<strong>F12</strong>，即可打开网站的调试模式，效果如下：</p><p><img src="https://i.loli.net/2019/03/24/5c9725b26483e.png" alt=""></p><p>右侧就是网站的源代码，可以用来爬</p><p>如果需要快速定位到某一部分的代码所在位置，我们可以鼠标右键，<strong>选择检查</strong>，如下图所示：</p><p><img src="https://i.loli.net/2019/03/24/5c9726466f7dd.png" alt=""></p><p>如果我们要快速定位某图片所在的代码位置，演示如下：</p><p><img src="https://i.loli.net/2019/03/24/5c9726d13491f.gif" alt=""></p><p>用这种方法观察每一张图片的源码：</p><p>它们的写法都是非常类似的，如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://upload.hbrchina.org/2019/0213/1550028457604.jpg"</span> <span class="attr">alt</span>=<span class="string">"1550028961(1)"</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>src</code>是图片的下载地址，<code>alt</code>是图片的便签，每一张图片都在<code>img</code>语句中</p><p>所以我们只要得到所有的<code>img</code>语句，然后从<code>img</code>语句中得到所有的<code>src</code>链接，就可以下载图片了。</p><p>每一种爬虫程序都类似，找到要爬部分的特点，然后调用相应的模块。</p><p>对于小白，难度就在于怎么样找到要爬部分的特点</p><hr><p>以上</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;爬虫-怎么爬静态网站&quot;&gt; 爬虫-怎么爬静态网站&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;爬静态网站主要分为两部分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;爬静态网站的文字&lt;/li&gt;
&lt;li&gt;爬静态网站的图片&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3&gt;&lt;span
      
    
    </summary>
    
      <category term="产品经理学技术" scheme="https://darerd.github.io/categories/%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E5%AD%A6%E6%8A%80%E6%9C%AF/"/>
    
      <category term="Python" scheme="https://darerd.github.io/categories/%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E5%AD%A6%E6%8A%80%E6%9C%AF/Python/"/>
    
    
      <category term="Python" scheme="https://darerd.github.io/tags/Python/"/>
    
      <category term="爬虫" scheme="https://darerd.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>随想-新零售企业““智胜”未来</title>
    <link href="https://darerd.github.io/2019/03/21/%E9%9A%8F%E6%83%B3-%E6%96%B0%E9%9B%B6%E5%94%AE%E4%BC%81%E4%B8%9A%E2%80%9C%E2%80%9C%E6%99%BA%E8%83%9C%E2%80%9D%E6%9C%AA%E6%9D%A5/"/>
    <id>https://darerd.github.io/2019/03/21/随想-新零售企业““智胜”未来/</id>
    <published>2019-03-21T13:00:15.000Z</published>
    <updated>2019-03-21T13:02:33.353Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="新零售企业智胜未来"> 新零售企业“智胜”未来</span></h1><p>最近看到一篇蛮有趣的<a href="http://www.hbrchina.org/2019-02-13/7147.html" target="_blank" rel="noopener">文章</a>，<code>新零售企业“智胜”未来</code></p><p>作者是:<u>罗兰贝格管理咨询全球高级合伙人兼大中华区副总裁 陈科</u>，他认为全渠道才是未来发展的核心关键，即线上线下零售体系充分融合，以完成对消费者的多触点沟通，从而获取更多的流量资源。</p><blockquote><p>以下是全文（有删改）：</p></blockquote><p>在过去几十年，中国传统线下零售发展迅速。而伴随着电商的崛起，线下传统零售的优势已不再如此突出。比如，一些企业存在供应链响应慢、渠道层级冗长、运营成本高等问题。但与此同时，线上零售的高速增长也难以为继，年复合增长率由2012年的61%回落至2017年的35%。但是中国线上零售的人口红利逐步消退，消费者转化率随之降低，线上获客成本不断攀升。</p><p>现在消费者获取商品信息的渠道越来越多，并日趋碎片化。对于企业来说，单一的渠道已不足以支撑业务的发展。随着手机的普及，<strong>全渠道才是未来发展的核心关键，即线上线下零售体系充分融合，以完成对消费者的多触点沟通，从而获取更多的流量资源</strong>。</p><p>随着80后和90后逐步升级为主流消费群体，消费者需求从基础的物质需求与计划性消费，逐渐向精神层面需求与及时性消费延伸。零售行业也随之进行了业态变迁：传统商超、百货、街边店满足了对基础物质和计划性消费的需求；外卖、便利店与无人零售门店业态的发展满足了人们对高效、及时性消费的需求；购物中心满足了休闲娱乐与社交需求定制的需求；门店与精品店则意欲服务于消费者个性化与品质需求；电商和多业态融合则在一定程度上兼顾了多元需求，并提供了更高的效率。</p><p><img src="http://upload.hbrchina.org/2019/0213/1550028457604.jpg" alt="1550028961(1)"></p><p>一言以蔽之，零售业态的变迁最终将成为消费者需求变化的重要体现。</p><h3><span id="生态格局演变与新生态价值"> 生态格局演变与新生态价值</span></h3><p>从20世纪90年代互联网萌芽发展至今，零售业与互联网之间的关系，伴随着消费需求的逐步升级、第四次技术革命和行业演进周期，大致经历了三大发展阶段。</p><p><img src="http://upload.hbrchina.org/2019/0213/1550028507536.jpg" alt="1550029035(1)"></p><p><strong>第一阶段，为我所用</strong>。从20世纪90年代到2003年左右，互联网影响力尚微，主要形态为搜索引擎及门户网站，零售行业主要通过网页广告、定向广告等方式将互联网作为营销手段/渠道。</p><p><strong>第二阶段，分庭抗礼</strong>。从2000年年初到2016年左右，随着技术突飞猛进与快速迭代，互联网企业从线上渠道切入既有市场，为消费者提供线上购物、交易、信息、社交等电商平台，实现了对零售行业“场”的重塑。多个互联网巨头浮现，行业发生爆发式增长，与传统零售体系形成分庭抗礼之势。</p><p><strong>第三阶段，互相融合</strong>。时至今日，单一线上或线下渠道皆不足以满足消费者日益“挑剔”的全方位需求。线下企业积极触网，线上企业则大规模建立线下触点，生产关系整体重组，形成“你中有我，我中有你”的融合格局，并形成了由“大平台”、“小生态”、“专服务”企业组成的生态格局。</p><blockquote><p>一句话道出了“美团”、“阿里”们的野心，要做大平台</p></blockquote><p>“大平台”企业是生态构建者，通过对流量和商户的聚集打造平台；“小生态”企业通常来自于传统垂直行业，覆盖产业链上下游，为消费者提供最终的产品或服务。在生态体系中，受到“大平台”企业在流量、数据等方面的扶持和辅助；而“专服务”企业则是平台上的中小微商户或提供专业服务的企业，在产业链细分环节有竞争优势，依附于“大平台”企业发展。</p><p><img src="http://upload.hbrchina.org/2019/0213/1550028536534.jpg" alt="1550029076(1)"></p><p>随着数据赋能驱动的商业模式兴起，零售行业逐渐形成了一个新的生态价值体系。在这一体系中，<strong>零售企业可以通过2C与2B两种方式实现价值创新与数据赋能。</strong></p><p>在C端，企业通过消费者多维度数据分析，深度理解目标消费者诉求，围绕对“人”的刻画和对交易场景的深度挖掘，以实现新的生态价值。</p><p>在B端，生态企业助力其他零售商户提升价值链效率以实现价值的案例也屡见不鲜。例如，为应对快速变化的消费者需求所产生的供需矛盾，数字化驱动的C2M供应模式凭借数据深度挖掘，整体打通需求端和供应端，实现数据低成本流动、供应链前移、全环节信息化来重塑产业链，以客户需求指导上游工厂生产。</p><p>在线下业态层面，“效率”与“体验”是两大核心消费者需求，直击消费者核心两大需求的无人零售和业态/场景拓展是大市场的引爆点。</p><p>此外，无人零售由于技术方面要求较高，目前尚处于投资试水阶段，可视为中长期机会；由于人口老龄化、人工成本上涨、商铺租金上涨及消费升级对便利性需求增加等原因，智能自动贩卖机正步入成长期。</p><p>近年来，线下业态/场景拓展的变迁演化主要体现在线下传统商户向商业形态变迁以及销售渠道拓展两个方向，并依此方向衍生出四种主要模式：</p><ol><li><strong>餐饮零售化</strong>，传统餐饮企业将餐饮食品打造为可零售贩卖的商品，以拳头产品延伸发展零售化商品。例如，海底捞的火锅底蘸料等产品，星巴克的咖啡豆等；</li><li><strong>场景拓展</strong>，传统零售店从线下渠道向线上线下同步融合发展，例如全家便利等；</li><li><strong>跨界融合</strong>，从单纯零售发展为融合餐饮、服务等其他业态的多元线下门店，例如超级物种等；</li><li><strong>全渠道一站式消费体验</strong>，既向多业态融合发展，又向多渠道融合发展——即基于物流和外卖能力进行线下拓展，实现餐饮+零售+到家配送业务的全方位融合服务。</li></ol><h3><span id="零售企业的智胜之道"> 零售企业的“智”胜之道</span></h3><p>在新的零售格局之下，了解消费者全方位、多场景下的个性化需求，是决定零售企业能否在未来占有一席之地的核心所在。因此，建议零售企业从以下三个方面做好准备，“智”胜未来。</p><p>第一，<strong>以线上线下融合，建立流量壁垒</strong>。零售业态新格局下，企业通过打造线上线下的无界融合，以消费者需求为核心，实现线上服务与线下场景的全渠道无缝融合，增加消费者触点及捕获需求，在增大消费者覆盖面的同时，全面提升用户体验，从而建立未来企业核心竞争力之流量壁垒。</p><p>第二，<strong>以赋能合纵连横，构建生态平台</strong>。新的零售格局中，协作和智能是两个核心关键因素。早期企业都习惯于采取单兵突围战术，通过不断扩大但依然有限的内部资源、能力和时间，力求在全链条提升话语权或控制力，从而通过降低成本或以差异化竞争，获取市场竞争的胜利。</p><p>但在当前大环境中，信息和需求变得多元、动态、复杂、模糊，无论是哪一类企业，都需要理解生态边界以及自己在生态内的定位。因此，与其单兵作战，不如合众家之力，共同构建有自身造血能力并有输血实力的生态系统，实现生态内互惠互利，服务于快速变化的消费者的多元化需求，打造集合各方资源的生态联合平台，快速拓展流量与边界，加强零售体系整体的竞争力。</p><p>第三，<strong>以数据重塑管理模式，革故鼎新</strong>。价值管理学教会我们通过管理优化，尽可能地最大化交易价值。零售企业历经百年，由于市场/消费者/价值链/品类的延伸及市场竞争环境的变化，通过管理优化和运营优化，保持企业的竞争力依然是这个时代最重要的话题之一，也是企业生存和发展的根基所在。</p><p>数字经济时代，企业的核心价值将从最初的交易价值，转向通过交易价值和数据价值获取现金及利润，并最终形成以数据价值与衍生价值为利润核心。可能会出现更多的后向收费模式。</p><p>“智”胜未来将是每一个零售企业都需要面临的重要抉择。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;新零售企业智胜未来&quot;&gt; 新零售企业“智胜”未来&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;最近看到一篇蛮有趣的&lt;a href=&quot;http://www.hbrchina.org/2019-02-13/7147.html&quot; target=&quot;_blank&quot; rel=&quot;n
      
    
    </summary>
    
      <category term="随想" scheme="https://darerd.github.io/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
      <category term="随想" scheme="https://darerd.github.io/tags/%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>产品经理有哪些分类？</title>
    <link href="https://darerd.github.io/2019/03/21/%E9%9A%8F%E6%83%B3-%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E6%9C%89%E5%93%AA%E4%BA%9B%E5%88%86%E7%B1%BB%EF%BC%9F/"/>
    <id>https://darerd.github.io/2019/03/21/随想-产品经理有哪些分类？/</id>
    <published>2019-03-21T11:37:11.000Z</published>
    <updated>2019-03-21T11:38:22.062Z</updated>
    
    <content type="html"><![CDATA[<p><strong>产品经理有哪些细分领域，对应特点是什么？</strong></p><hr><p><strong>问：</strong>   产品经理有哪些细分领域，对应特点是什么？</p><p><strong>答：</strong>   可以分为以下几个方面回答：</p><p>1：产品经理的细分领域； 2：不同类型产品经理的岗位要求。</p><hr><blockquote><p>产品经理—Product Manager (简称为PM)   负责市场调查并根据用户的需求，确定开发何种产品，选择何种业务模式、商业模式等。并推动相应产品的开发组织，<strong>ta</strong>还要根据产品的生命周期，协调研发、营销、运营等，确定和组织实施相应的产品策略，以及其他一系列相关的产品管理活动。</p></blockquote><hr><p>1：产品经理的细分领域</p><ol><li>按用户类型分：</li></ol><p>-To B 产品经理  -To C 产品经理</p><ol><li>按前后端分：</li></ol><p>-前端产品经理  -后端产品经理</p><ol><li>按工作内容分：</li></ol><p>-交互产品经理  -需求产品经理</p><p>-商业产品经理  -策略产品经理</p><p>-广告产品经理  -数据产品经理</p><ol><li>按设备分：</li></ol><p>-PC端产品经理 -移动端产品经理</p><p>-H5端产品经理 -小程序产品经理</p><ol><li>按行业分：</li></ol><p>-社交产品经理  -电商产品经理 -金融产品经理</p><p>-内容产品经理  -B2D产品经理    -工具产品经理</p><hr><p><mark>2：不同类型产品经理的岗位要求</mark></p><p>因为产品经理分类众多，下面只列举几个比较有代表性的</p><p>商业产品经理</p><p><img src="https://pic3.zhimg.com/v2-921ac767e19405295b51be5eb50b756e_b.png" alt="img"></p><p>广告产品经理</p><p><img src="https://pic2.zhimg.com/v2-f98beb9c759e64275da5fc2164056b49_b.png" alt="img"></p><p>数据产品经理</p><p><img src="https://pic3.zhimg.com/v2-1789079662a03313019174835e779e9a_b.png" alt="img"></p><p>策略产品经理(增长方向)</p><p><img src="https://pic3.zhimg.com/v2-1789079662a03313019174835e779e9a_b.png" alt="img"></p><p>小程序产品经理(政务类)</p><p><img src="https://pic4.zhimg.com/v2-3957d62ee1c6d5a8241004e807fea71b_b.png" alt="img"></p><hr><p>产品经理虽然脱胎于<em>P&amp;G</em>(宝洁)这一传统快消行业，但是随着互联网的不断发展与渗透，现在提到产品经理多指<em>互联网领域</em>。随着互联网行业的不断发展，产品经理的职位也越来越细化，每个人都涉及一个小领域，但是编者认为，产品经理最好的发展方向主要是两个：</p><ol><li><strong>增长黑客方向(技术与产品思维于一身)；</strong></li><li><strong>商业变现方向(完美平衡商业化和用户体验)。</strong></li></ol><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;产品经理有哪些细分领域，对应特点是什么？&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;问：&lt;/strong&gt;   产品经理有哪些细分领域，对应特点是什么？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;答：&lt;/strong&gt;   可以分为以下几个方面回答：&lt;/
      
    
    </summary>
    
      <category term="随想" scheme="https://darerd.github.io/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
      <category term="随想" scheme="https://darerd.github.io/tags/%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>上瘾：让用户养成使用习惯的四大产品逻辑|产品书单|第二期</title>
    <link href="https://darerd.github.io/2019/03/20/%E4%BA%A7%E5%93%81%E4%B9%A6%E5%8D%95-%E3%80%8A%E4%B8%8A%E7%98%BE%E3%80%8B%EF%BC%9A%E8%AE%A9%E7%94%A8%E6%88%B7%E5%85%BB%E6%88%90%E4%BD%BF%E7%94%A8%E4%B9%A0%E6%83%AF%E7%9A%84%E5%9B%9B%E5%A4%A7%E4%BA%A7%E5%93%81%E9%80%BB%E8%BE%91-%E7%AC%AC%E4%BA%8C%E6%9C%9F/"/>
    <id>https://darerd.github.io/2019/03/20/产品书单-《上瘾》：让用户养成使用习惯的四大产品逻辑-第二期/</id>
    <published>2019-03-20T14:29:47.000Z</published>
    <updated>2019-03-20T14:51:00.465Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="上瘾让用户养成使用习惯的四大产品逻辑"> 《上瘾》：让用户养成使用习惯的四大产品逻辑</span></h1><blockquote><p>每一位产品人都应该多看书，读好书<br>只有这样才能不断进步<br>形成自己的方法论</p></blockquote><p>本期推荐的书是《上瘾》：让用户养成使用习惯的四大产品逻辑</p><p>本书专为产品经理、设计师、市场销售人员、广告创意者打造，每一位跟用户行为打交道的人，都值得将其奉为案头必备指南。</p><hr><h3><span id="上瘾"> 《上瘾》</span></h3><p><code>author:[美]尼尔·埃亚尔 / [美] 瑞安·胡佛</code></p><p><img src="https://i.loli.net/2019/03/20/5c924fe23ceb7.png" alt=""></p><h4><span id="内容简介"> 内容简介</span></h4><p>——为什么我们会习惯性地点开某个App？</p><p>——这种使用习惯到底是如何养成的？</p><p>——为什么有些产品能让我们戒不掉，而其他的产品却不行？</p><p>——是否有什么秘诀能让用户对你的产品形成使用习惯，欲罢不能？</p><p>《上瘾》揭示了很多让用户形成使用习惯，甚至“上瘾”的互联网产品服务背后的基本设计原理，告诉你怎样打造一款让用户欲罢不能的产品。作者根据自己多年的研究、咨询及实际经验，提出了新颖而实用的“<strong>上瘾模型</strong>”（Hook Model），即通过四个方面来养成用户的使用习惯。通过连续的“上瘾循环”，让用户成为“回头客”，进而实现循环消费的终极目标，而不是依赖高昂的广告投入或泛滥粗暴的信息传播。</p><h4><span id="作者介绍"> 作者介绍</span></h4><p>尼尔·埃亚尔（Nir Eyal），曾在斯坦福大学商学院与Hasso Plattner研究所任教，并有多篇技术、心理学及商业文章在《哈佛商业评论》《大西洋月刊》、TechCrunch网站和《今日心理学》等媒体上发表。</p><p>瑞安·胡佛（Ryan Hoover），曾任撰稿人，长期为《福布斯》《快公司》等媒体撰稿，Product Hunt公司创始人。</p><h4><span id="目录"> 目录</span></h4><p><img src="https://i.loli.net/2019/03/20/5c9251d59a1aa.png" alt=""></p><h4><span id="下载地址"> 下载地址</span></h4><p>关注微信公众号：<strong>产品汪darer</strong>，后台回复关键词：<strong>上瘾</strong>，即可下载</p><p>如果想要目录的<strong>思维导图</strong>，后台留言：<strong>上瘾，我全都要</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;上瘾让用户养成使用习惯的四大产品逻辑&quot;&gt; 《上瘾》：让用户养成使用习惯的四大产品逻辑&lt;/span&gt;&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;每一位产品人都应该多看书，读好书&lt;br&gt;
只有这样才能不断进步&lt;br&gt;
形成自己的方法论&lt;/p&gt;
&lt;/bloc
      
    
    </summary>
    
      <category term="产品书单" scheme="https://darerd.github.io/categories/%E4%BA%A7%E5%93%81%E4%B9%A6%E5%8D%95/"/>
    
    
      <category term="产品书单" scheme="https://darerd.github.io/tags/%E4%BA%A7%E5%93%81%E4%B9%A6%E5%8D%95/"/>
    
  </entry>
  
  <entry>
    <title>HuPu商业化困境</title>
    <link href="https://darerd.github.io/2019/03/20/%E9%9A%8F%E6%83%B3-HuPu%E5%95%86%E4%B8%9A%E5%8C%96%E5%9B%B0%E5%A2%83/"/>
    <id>https://darerd.github.io/2019/03/20/随想-HuPu商业化困境/</id>
    <published>2019-03-20T14:02:14.000Z</published>
    <updated>2019-03-25T04:02:01.475Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="虎扑的商业化困局"> 虎扑的商业化困局</span></h1><h3><span id="用户体验"> 用户体验</span></h3><p><strong>一句话：取消发帖门槛后，垃圾贴、卖片贴丛生</strong></p><h3><span id="数据"> 数据</span></h3><p><img src="https://i.loli.net/2019/03/20/5c91c938f17c7.gif" alt=""></p><p>体育资讯排名对比</p><p><img src="https://i.loli.net/2019/03/20/5c91c95c578d2.png" alt=""></p><p>用户画像对比，都是直男额</p><p><img src="https://i.loli.net/2019/03/20/5c91c8bdad47f.png" alt=""></p><p><img src="https://i.loli.net/2019/03/20/5c91c8d4d6289.png" alt=""></p><p>百度指数</p><p>百度指数和Talkigdata的数据有些出入，两者对比，关注懂球帝的中年人更多</p><p><img src="https://i.loli.net/2019/03/20/5c91ca157a41f.png" alt=""></p><p><img src="https://i.loli.net/2019/03/20/5c91ca29caa80.png" alt=""></p><p>从数据看，虎扑现在是后有追兵，一家独大的地位受到了冲击，用户流失会不断增加</p><p>从定位来看，两者仍有不同，虎扑定位是Jrs社区，偏向UGC（用户分享内容），随着发帖权限的开放，内容质量越来越低，有逐渐脱离体育的本质，往日常生活社区发展，比如虎扑步行街的流量极大。</p><p>懂球帝定位是体育类深度资讯，从名字的“懂”就可以看出，偏向PGC（专业人士认识分享内容），从人群属性可以看到，懂球帝中年龄在30岁以上的用户较多，这部分年龄的人阅历更加丰富，更为专业。下面这个图更可以说明情况：</p><p><img src="https://i.loli.net/2019/03/20/5c91cded62dfa.png" alt=""></p><p>懂球号自媒体平台</p><p>最近也很明显感觉到虎扑上优质球评的帖子越来越少，撕逼贴越来越多</p><p>假以时日，失去了PGC江山的虎扑，定会在撕逼灌水社区中越走越远，历史证明这样的发展之路活不了，贴吧的没落就是很好的证据。</p><h3><span id="融资情况"> 融资情况</span></h3><p><img src="https://i.loli.net/2019/03/20/5c91f120e16c7.png" alt=""></p><p>2007年成立的虎扑，现在也已经12岁了，在2015年D轮融资后，开始着手IPO，但是无疾而终。在2018年融资6.18亿，是目前中国体育领域单笔融资的最高纪录。从虎扑融资历史来看，IPO是不得不发的事，投资方需要融资收回投资成本，12岁的虎扑仍未上市，在互联网行业已是“大龄”。在2018年拿到融资后，虎扑也是动作频频，比如投资了电竟行业，虎扑直男和吴亦凡粉丝的大战等等，探索和拓展其商业化之路。</p><h3><span id="商业化"> 商业化</span></h3><h4><span id="透过版本迭代看商业化"> 透过版本迭代看商业化</span></h4><p>以下是2018融资后的几次重要版本迭代</p><h5><span id="版本-7116-2018年2月9日"> 版本 7.1.16 (2018年2月9日)</span></h5><ol><li>可以在底部「社区」里看视频了；</li><li>在个人主页可以看自己的声望了，声望代表你对社区的贡献；</li></ol><blockquote><p>增加 视频 这一媒介，</p></blockquote><h5><span id="版本-7120-2018年5月5日"> 版本 7.1.20 (2018年5月5日)</span></h5><ol><li>「比赛」页面增加绝地求生比赛，祝虎扑签约战队 iFTY、17和4AM天天吃鸡</li><li>「社区」-「视频」页面增加分类，查找视频更快更方便</li></ol><blockquote><p>发力 电竞</p></blockquote><h5><span id="版本-720-2018年6月13日"> 版本 7.2.0 (2018年6月13日)</span></h5><ol><li>首页新增个性化「热门」页面，聚合新闻、帖子、视频、亮评等各种内容，刷也刷不完</li></ol><blockquote><p>设计了类似 头条 的新闻聚合</p></blockquote><h5><span id="版本-7210-2018年9月9日"> 版本 7.2.10 (2018年9月9日)</span></h5><ol><li>新增了「首页」-「视频」列表，给你推荐喜欢的内容</li></ol><h5><span id="版本-730-2018年10月12日"> 版本 7.3.0 (2018年10月12日)</span></h5><ol><li>重新设计了界面样式，疯狂提升交互体验</li><li>视频页支持向上滑动查看更多视频</li><li>新增「装备」首页，可查询球鞋发售日历</li></ol><blockquote><p>结合虎扑旗下”识货“app 发力电商</p></blockquote><p>从版本迭代可以看到，虎扑在往泛娱乐化社区倾斜（增加视频和新闻聚合）；新增装备页面，为自家电商引流。</p><h4><span id="商业化的三驾马车"> 商业化的三驾马车</span></h4><ol><li>虎扑社区</li></ol><p>取消发帖门槛，继续深耕社区发展，坐拥大流量，广告是其主要收入</p><blockquote><p>据其2016年递交的招股书，虎扑从2013年到2015年的营业收入分别为0.98亿元、1.4亿元、2亿元。尽管在资本市场，广告业务听上去没那么吸引人，但它目前是虎扑最大的收入来源。2013年到2015年，虎扑的广告收入分别达到5473.57万元、7860.13万元和1.22亿元，占比由55.64%上升至60.78%</p></blockquote><ol start="2"><li>电商变现</li></ol><p>结合体育，做电商（“识货”APP）</p><blockquote><p>识货”在2012年6月上线，早期做的事情类似“淘宝客”——把虎扑用户导流到淘宝商城购买商品，虎扑从中抽取佣金，平均返点比例在6%-8%。到了2016年，“识货”开始尝试自营。截至2017年12月31日，“识货”共完成商品交易总量20亿元，2017年营收额在1.2-1.6亿元之间。在虎扑的总收入中，这部分营业收入占比超过三分之一。</p></blockquote><ol start="3"><li>体育IP开发</li></ol><p>开发路人王赛事</p><h3><span id="困局"> 困局</span></h3><p>虎扑最大护城河是其粉丝，是所谓的Jrs</p><p>但是如果虎扑走上娱乐化的倾斜道路，势必会偏离体育社区的本质，那么这个时候用户是否会买账呢？</p><p>用户是忠于虎扑Jrs这个品牌？还是忠于体育社区这个产品呢？</p><p>是彻底走上泛娱乐化的道路，为电商拓宽流量来源，还是回归专业体育社区，寻找尚不明晰的盈利路径？</p><p>这是虎扑最大的困局</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;虎扑的商业化困局&quot;&gt; 虎扑的商业化困局&lt;/span&gt;&lt;/h1&gt;
&lt;h3&gt;&lt;span id=&quot;用户体验&quot;&gt; 用户体验&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;一句话：取消发帖门槛后，垃圾贴、卖片贴丛生&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span 
      
    
    </summary>
    
      <category term="随想" scheme="https://darerd.github.io/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
      <category term="随想" scheme="https://darerd.github.io/tags/%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
</feed>
