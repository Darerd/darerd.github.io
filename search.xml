<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[学习中需要了解的Python知识]]></title>
    <url>%2Fdarerd.github.io%2F2019%2F02%2F19%2F%E5%AD%A6%E4%B9%A0%E4%B8%AD%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E7%9A%84Python%E7%9F%A5%E8%AF%86%2F</url>
    <content type="text"><![CDATA[在通过《笨方法学Python》学习Python的过程中，作者在每一节，提出了一些Python的知识，以让读者提前研习。 Pydoc命令 input() 和 raw_input() 命令的区别 import命令 1. Pydoc命令 pydoc — Documentation generator and online help system 帮你从代码和注释自动生成文档的工具 所以我们可以利用pydoc查询某些命令的用法 123# 比如我想查input命令的用法# 可以在命令行键入以下指令python -m pydoc input 2. input() 和 raw_input() 命令的区别 Python2.x 中 input() 相等于 eval(raw_input(prompt)) ，用来获取控制台的输入。 raw_input() 将所有输入作为字符串看待，返回字符串类型。 而 input() 在对待纯数字输入时具有自己的特性，它返回所输入的数字的类型（ int, float ）。 123注意：input() 和 raw_input() 这两个函数均能接收 字符串 ，但 raw_input() 直接读取控制台的输入（任何类型的输入它都可以接收）。而对于 input() ，它希望能够读取一个合法的 python 表达式，即你输入字符串的时候必须使用引号将它括起来，否则它会引发一个 SyntaxError 。除非对 input() 有特别需要，否则一般情况下我们都是推荐使用 raw_input() 来与用户交互。 参考资料 3. import命令 利用import语句来引入python中的模块(module) 语法如下： 12345import module1[, module2[,... moduleN]]# 示例# 想要导入模块 math.py，需要把命令放在脚本的顶端：import math# 一个模块只会被导入一次，不管你执行了多少次import。这样可以防止导入模块被一遍又一遍地执行 Python 的 from 语句让你从模块中导入一个指定的部分到当前命名空间中 from…import 语句 ，语法如下： 1234from modname import name1[, name2[, ... nameN]]# 示例# 要导入模块 fib 的 fibonacci 函数from fib import fibonacci 参考资料]]></content>
      <categories>
        <category>小白学习</category>
        <category>Python系列</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[七牛图片测试demo]]></title>
    <url>%2Fdarerd.github.io%2F2019%2F02%2F14%2F%E4%B8%83%E7%89%9B%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95demo%2F</url>
    <content type="text"><![CDATA[不知为何图片无法上传]]></content>
  </entry>
  <entry>
    <title><![CDATA[Test3_变量和命名]]></title>
    <url>%2Fdarerd.github.io%2F2019%2F02%2F03%2FTest3-%E5%8F%98%E9%87%8F%E5%92%8C%E5%91%BD%E5%90%8D%2F</url>
    <content type="text"><![CDATA[Python系列之笨方法学Python是我学习《笨方法学Python》—Zed A. Show著的学习思路和理解，如有不如之处，望指出！！！ 文章主要分为三个部分： 原文—摘录至《笨方法学Python》第三版 学习中遇到的问题 附加练习 原文—摘录至《笨方法学Python》第三版ex4.py &amp; ex5.py123456789101112131415161718192021222324252627282930313233343536# ex4.py#cars=100space_in_car=4.0drivers=30passengers=90cars_not_driven=cars-driverscars-driven=driverscarpool_capacity=cars-driven*space_in_a_caraverage_passengers_per_car=passengers/cars-drivenprint "There are",cars,"cars available."print "There are only ",drivers,"drivers available."print "Ther will be",cars_not_driven,"empty cars today."print "We can transport",carpool_capacity,"people today."print "We have",passengers,"to carpool today."print "We need to put about",average_passengers_per_car,"in each car."# ex5.py#my_name='Zed A. Shaw' # 《笨方法学Python》作者my_age=35my_height=74 #inchesmy_weight=180 #lbsmy_eyes='Blue'my_teeth='while'my_hair='Brown'print "Let's talk about %s." %my_nameprint "He's %d inches tall." %my_heightprint "He's %d ponds heavy." %my_weightprint "Actually that's not too heavy."print "He's got %s eyes and %s hair." % (my_eyes,my_hair)print "His teeth are usually %s depending on the coffee." %my_teethprint "If I add %d ,%d ,and %d I get %d. " %(my_age,my_height,my_weight,my_age+my_height+my_weight) 遇到的问题 一些关于字符串（string）的知识 12345# 使用“ 或 ‘ 来创建字符串print '这是一个字符串'print "这也是一个字符串"# 字符串也可以相加print "Hello" + ' world' 关于变量名的知识 1# 变量名设置的要求：使用下划线分割的小写字母 代码中 %s 、%d 和 %r 是起什么作用？ 12345# %s 、%d 和 ％ｒ 是一种”格式控制工具“，＃指令告诉Ｐｙｔｈｏｎ 把右边的变量带到字符串，并把变量的值放到％ｓ等所在的位置＃如果变量是字符串，使用％ｓ＃如果变量是数字，使用％ｄ＃无论变量是什么，都可以用％ｒ 附加练习以下摘录自原文 单等号和双等号有什么不同？ 如何将浮点数四舍五入？使用ｒｏｕｎｄ（）函数]]></content>
      <categories>
        <category>小白学习</category>
        <category>Python系列</category>
      </categories>
      <tags>
        <tag>笨方法学Python</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Test1_第一个程序]]></title>
    <url>%2Fdarerd.github.io%2F2019%2F02%2F03%2FTest1-%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%A8%8B%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[Python系列之笨方法学Python是我学习《笨方法学Python》—Zed A. Show著的学习思路和理解，如有不如之处，望指出！！！ 文章主要分为三个部分： 原文—摘录至《笨方法学Python》第三版 学习中遇到的问题 问题的解决方法 附加练习 原文—摘录至《笨方法学Python》第三版ex1.py1234567print "Hello world"print "Hello again"print "I like typing this"print "This is fun"print 'Yay! printing'print "I'd much rather you 'not'."print 'I "said" do not touch this.' 遇到的问题如果用双引号” “ ，把字符串包起来，那么，句中不能用双引号，只能用单引号‘ ’ 如果用单引号‘ ’ ，把字符串包起来，那么，句中不能用单引号，只能用双引号” “ 否则就会出现如下结果： 1234&gt;&gt;&gt; print " I"d much rather you "not"."SyntaxError: invalid syntax&gt;&gt;&gt; print ' I 'said' do not touch this.'SyntaxError: invalid syntax 解决办法书写时，注意这个细节，按照规范书写即可 附加练习以下摘录自原文 多打印一行脚本 让脚本只打印一行 如果在代码前加一个“#”，会出现什么效果呢？ 程序中注释是非常重要的，我们可以在一段代码的前面加上一个字符”#”，来把这段代码注释掉，而不被Python执行。 为什么 Print “Hi # there.” 里的#没被忽略掉呢？ 这行代码里的#处于字符串内部，所以它就是引号结束前的字符串中的一部分，这时它只是一个普通字符，而不是代表注释的意思。]]></content>
      <categories>
        <category>小白学习</category>
        <category>Python系列</category>
      </categories>
      <tags>
        <tag>笨方法学Python</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Test6_参数、变量]]></title>
    <url>%2Fdarerd.github.io%2F2019%2F02%2F03%2FTest6-%E5%8F%82%E6%95%B0%E3%80%81%E5%8F%98%E9%87%8F%2F</url>
    <content type="text"><![CDATA[Python系列之笨方法学Python是我学习《笨方法学Python》—Zed A. Show著的学习思路和理解，如有不如之处，望指出！！！ 文章主要分为三个部分： 原文—摘录至《笨方法学Python》第三版 学习中遇到的问题 问题的解决方法 附加练习 原文—摘录至《笨方法学Python》第三版ex13.py &amp; ex14.py1234567891011121314151617181920212223242526272829303132# ex13.pyfrom sys import argvscript, first, second, third=argvprint "The script is called:",scriptprint "Your first variable is:",firstprint "Your second variable is:",secondprint "Your third variable is:",third# ex14.pyfrom sys import argvscript, user_name =argvprompt='&gt; 'print "Hi %s, I'm the %s script."%(user_name,script)print "I'd like to ask you a few questions."print "Do you like me %s?"%user_namelikes=raw_input(prompt)print "Where do you live %s?"%user_namelives=raw_input('&gt; ')print "What kind of computer do you have?"computer=raw_input(prompt)print"""Alright, so you said %r about liking me.You live in %r. Not sure where that is.And you have a %r computer. Nice!""" %(likes,lives,computer) 应该看到的结果 原文作者不建议使用python的IDLE运行程序，推荐使用windows下的Powershell（命令行） 不清楚为什么不建议使用IDLE ex13.py12345&gt; python ex13.py 1st 2nd 3rdThe script is called:ex13.pyYour first variable is:1stYour second variable is:2ndYour third variable is:3rd ex14.py123456789101112131415&gt; python ex14.py darerHi darer, I'm the ex14.py script.I'd like to ask you a few questions.Do you like me darer?&gt; yesWhere do you live darer?&gt; chinaWhat kind of computer do you have?&gt; lenovoAlright, so you said 'yes' about liking me.You live in 'china'. Not sure where that is.And you have a 'lenovo' computer. Nice! 需要注意的几个地方 怎么在当前文件夹运行Powershell 利用命令行指令 cd 在当前文件夹 shift+鼠标右键 选择“打开powershell” 注意ex14.py中，raw_input()的用法 为什么ex14.py 中，键入的字符没有单引号，但是输出的结果中却有单引号（’ ‘）呢？ 因为%r是调试专用，它输出的是“原始表示”出来的字符 而%s是为了给用户显示 附加练习以下摘录自原文 是否可以用双引号定义prompt变量的值？ argv和raw_input()有什么不同？ 如果参数是在用户执行命令时就要输入的，那就是argv 如果是在脚本运行过程中需要用户输入，那就使用raw_input() argv就是所谓的”参数变量“（argument variable），这个变量保存着你运行Python脚本时传递给Python脚本的参数。 脚本中出现import语句，非常重要，它用于导入模块（module）]]></content>
      <categories>
        <category>小白学习</category>
        <category>Python系列</category>
      </categories>
      <tags>
        <tag>笨方法学Python</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Test5_更多字符串练习]]></title>
    <url>%2Fdarerd.github.io%2F2019%2F02%2F03%2FTest5-%E6%9B%B4%E5%A4%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%83%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[Python系列之笨方法学Python是我学习《笨方法学Python》—Zed A. Show著的学习思路和理解，如有不如之处，望指出！！！ 文章主要分为三个部分： 原文—摘录至《笨方法学Python》第三版 学习中遇到的问题 问题的解决方法 附加练习 原文—摘录至《笨方法学Python》第三版ex10.py 、ex11.py &amp; ex12.py1234567891011121314151617181920212223242526272829303132333435363738# ex10.pytabby_cat="\t I'm tabbed in."persian_cat="I'm split \n on line. "backslash_cat="I'm \\ a \\ cat."fat_cat= """I'll do a list:\t * Cat foog\t * Fishies\t * Catnip \n \t *Grass"""print tabby_catprint persian_catprint backslash_catprint fat_cat# ex11.pyprint "How old are you?",age=raw_input()print "How tall are you?",height=raw_input()print "How much do you weigh?",weight=raw_input()print "So, you're %r old,%r tall and %r heavy."%(age,height,weight)#ex12.pyage=raw_input("How old are you? ")height=raw_input("How tall are you? ")weight=raw_input("How much do you weigh? ")print "So, you're %r old,%r tall and %r heavy."%(age,height,weight) 需要注意的几个地方 python中 \t 的效果，类似于在word写作中，tab键起到的作用；\n 的效果，类似于在word写作中，enter 键起到的作用； 在ex11.py 程序中，每行的print后面加了个逗号（，），这样print就不会输出换行符而结束这一行了。 python 中可以在一组三引号（”””）之间放入任意多行的文字。 附加练习以下摘录自原文 下面是python支持的转义序列 12345678910\\ # 反斜杠（\）\' # 单引号\" # 双引号\a # ASCII 响铃符\b # ASCII 退格符\f # ASCII 进纸符\r # ASCII 回车符\uxxxx # 值为16位十六进制值xxxx的字符（仅适用于Unicode）\Uxxxxxxxx # 值为32位十六进制值xxxxxxxx的字符（仅适用于Unicode）\v # ASCII 垂直制表符 Python 的raw_input实现的是什么功能？以及其他用法 input()和raw_input()有何不同？]]></content>
      <categories>
        <category>小白学习</category>
        <category>Python系列</category>
      </categories>
      <tags>
        <tag>笨方法学Python</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Test4_字符串练习]]></title>
    <url>%2Fdarerd.github.io%2F2019%2F02%2F03%2FTest4-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BB%83%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[Python系列之笨方法学Python是我学习《笨方法学Python》—Zed A. Show著的学习思路和理解，如有不如之处，望指出！！！ 文章主要分为三个部分： 原文—摘录至《笨方法学Python》第三版 学习中遇到的问题 问题的解决方法 附加练习 原文—摘录至《笨方法学Python》第三版ex6.py &amp; ex8.py1234567891011121314151617181920212223242526272829303132333435# ex6.pyx="There are %d types of people." %10binary="binary"do_not="don't"y="Those who know %s and those who %s." %(binary,do_not)print xprint yprint "I said: %r." % x print "I also said: '%s'." %y hilarious=Falsejoke_evaluation="Isn't that joke so funny?! %r " print joke_evaluation % hilariousw="This is the left side of ..."e="a sting with a right side."print w+e # ex8.pyfomatter="%r %r %r %r"print fomatter %(1,2,3,4)print fomatter %("one","two","three","four")print fomatter %(True,False,False,True)print fomatter %(fomatter,fomatter,fomatter,fomatter)print fomatter %( "I had this thing.", "That you could type up right." "But it didn't sing." "So I said goodnight." ) 遇到的问题 ex8.py 的代码中 %r打印出来的是单引号，但是实际上用的双引号python会用最有效的方式打印出字符串，而不是完全按照你写的方式来打印。 True和False是Pyhthon的关键字，用来表示真和假的概念。如果加了引号，就变成了字符串，无法实现原来的功能。 %r的作用%r是用来调试（debug）比较好，因为它会显示变量的原始数据，而%s、%d等符号是用来向用户显示输出的。 附加练习以下摘录自原文 每一行加一段注释 最后一行输出既有单引号又有双引号，你觉得这背后的机制是什么？]]></content>
      <categories>
        <category>小白学习</category>
        <category>Python系列</category>
      </categories>
      <tags>
        <tag>笨方法学Python</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Test2_数字和数学计算]]></title>
    <url>%2Fdarerd.github.io%2F2019%2F02%2F03%2FTest2-%E6%95%B0%E5%AD%97%E5%92%8C%E6%95%B0%E5%AD%A6%E8%AE%A1%E7%AE%97%2F</url>
    <content type="text"><![CDATA[Python系列之笨方法学Python是我学习《笨方法学Python》—Zed A. Show著的学习思路和理解，如有不如之处，望指出！！！ 文章主要分为三个部分： 原文—摘录至《笨方法学Python》第三版 学习中遇到的问题 附加练习 原文—摘录至《笨方法学Python》第三版ex3.py1234567891011121314151617print "I will now count my chickens:"print "Hens" , 25+30/6print "Roosters", 100-25*3%4print "Now, I will count the eggs:"print 3+2+1-5+4%2-1/4+6print "Is it true that 3+2&lt;5-7"print 3+2&lt;5-7print "What is 3+2?",3+2print "What is 5-7?",5-7print "Oh, that's why it's False."print "Is it greater?",5&gt;-2print "Is it greater or equal?",5&gt;=-2print "Is it less than or equal?",5&lt;=-2 遇到的问题 利用Python做四则运算非常简单，但是除法运算略有一些复杂 例如： 123print 5/2 # 输出结果是整数2# 对于整数除法来说，输出结果会自动(四舍五入)取整 为了解决以上除法运算时出现的问题，我们需要理解浮点数 1232.0 # 这是一个浮点数(float)print 11.0/4.0# 输出结果是2.75 可以使用小括号强制计算的先后顺序 布尔值也是基本数据类型 比较运算的结果直接输出布尔值（True or False） 12print 2&gt;4# 输出结果是False 附加练习以下摘录自原文 每一行的代码用#写注释，说明一些这一行的作用 使用浮点数重新写一下ex3.py]]></content>
      <categories>
        <category>小白学习</category>
        <category>Python系列</category>
      </categories>
      <tags>
        <tag>笨方法学Python</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我是如何利用不同的网盘管理文件的？]]></title>
    <url>%2Fdarerd.github.io%2F2019%2F02%2F01%2F%E6%88%91%E6%98%AF%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8%E4%B8%8D%E5%90%8C%E7%9A%84%E7%BD%91%E7%9B%98%E7%AE%A1%E7%90%86%E6%96%87%E4%BB%B6%E7%9A%84%EF%BC%9F%2F</url>
    <content type="text"><![CDATA[之前，我和普通人一样，把文件上传到百度云，比如电影、软件、文档等等，但是在前几天，我在整理电脑时，当天从百度云下载了很多文件，利用 PanDownload (下载地址) 下载的，被百度识别到异常，给我限速了！！！很生气，我分享到云端的文件，我还被限速了！(确实，我利用破解软件下载，也有责任) 因此，我由此开始考虑，自己本地文件应该怎么样管理呢？放在一家网盘中，肯定是不行了，需要利用文件的特性，利用不同的网盘平台。 首先，我把文件做了以下分类： 绝对隐私文件：私密照片、视频；加密文档；等等 私人文件：照片、视频（非私密）；文档（活动策划、方案、论文等） 公共资源：电影、音乐、软件、教程、电子书、文档 等等 绝对隐私文件没有绝对安全的网盘，这一类文件最好不要放在云端！！！ 建议：备份在私人硬盘 私人文件我把私人文件分为两类： 长期保存 短期保存 需长期保存的文件建议：可先暂存云端，定期备份到本地 以我为例： 照片类：我的主要是旅游、活动合影、留念这些；需要存储空间大，方便手机上传，可随时下载本地 我利用的是谷歌相册，主要是看中两点： 谷歌相册无限空间 谷歌家更放心些（建议关闭所有共享功能） 当然使用谷歌相册，你需要梯子 才能用 视频类、文档类：我是压缩后，保存到百度云盘 仅短期保存的文件一般我都是压缩后，保存到百度云盘 但是对一些文件，我们想在电脑、PC、笔记本之间快速共享，仅利用网盘的共享功能，而不把文件存储起来，这里我推荐两种方法： 对于小文件（Word、PPT、表格、照片等），我推荐坚果云 ，非常良心，免费版每30天，有1G的上传流量和3G的下载流量，上传、下载都是满速，无广告！！！小文件，基本够用的！！ 对于一些大文件（设计稿、视频处理等等），我推荐GoodSync , 介绍说明 ，可以实现不同终端之间数据的同步共享，就是一神器。这里下载神器 公共资源公共资源主要有：好用的软件、电子书、电影、教程、模板等等 建议： 电子书、软件等分享价值的、较为稀缺、难搞的文件，放在城通网盘 城通网盘有400G空间、分享给别人还会有收益奖励，下载速度也还可以，所以为什么不把自己手里的资源再共享的同时还可以赚钱呢？！ 电影、视频类，建议百度云 因为你去搜电影资源多是百度云分享，此时把电影等下载到本地在传到别的网盘是费时费力的，不如留在百度云盘，毕竟还有在线播放功能。 以上，就是我利用不同网盘管理文件的方法 如果你有更好的想法，可以下方留言讨论，欢迎转发分享！]]></content>
      <categories>
        <category>随想</category>
        <category>技巧方法</category>
      </categories>
      <tags>
        <tag>文件管理</tag>
        <tag>网盘</tag>
        <tag>资源分享</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fdarerd.github.io%2F2019%2F01%2F30%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客框架下，模板的选择与主题优化]]></title>
    <url>%2Fdarerd.github.io%2F2019%2F01%2F30%2FHexo%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6%E4%B8%8B%EF%BC%8C%E6%A8%A1%E6%9D%BF%E7%9A%84%E9%80%89%E6%8B%A9%E4%B8%8E%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%2F</url>
    <content type="text"><![CDATA[折腾了两三天，零基础的我，终于找到一个喜欢的模板，并做好了优化 编译环境：（Windows 10 操作系统） Git version：2.20.1 Node version：10.15.0 模板Next version：5.1.4 Markdown编辑器 version：0.9.64 关于利用GithubPages和Hexo搭建个人独立博客，和下载Hexo主题模板的教程，可以查阅 ，有非常简单易懂的教程 Next模板主题优化选择SchemeNext模板内置四种不同的主题，可以自定义开启，参考文档： 选择Scheme 设置语言参考文档：设置语言 如果你想设置多种语言，可以参考以下指令： 1234language: - zh-Hans - en - zh-hk .yml 文件修改是需要注意：每一个值的冒号后面都有一个半角空格！ 未生效的写法：title:Darer‘Blog 能生效的写法：title:[空格]Darer‘Blog 设置菜单参考文档：设置菜单 补充说明： 123456789menu: home: / || home tags: /tags/ || tags categories: /categories/ || th archives: /archives/ || archive about: /about/ || user #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbeat 以上设置 菜单栏 的指令 也决定了 菜单栏各项菜单的顺序，以上面的指令为例，顺序依次为：主页、标签、目录、归档、关于 设置侧栏参考文档：设置侧栏 补充说明： 123456789101112# Sidebar offset from top menubar in pixels (only for Pisces | Gemini).###侧栏与顶部菜单栏的 空隙距离 offset: 12 # Back to top in sidebar.(only for Pisces | Gemini). ### 侧边栏加入一个 回到顶部 按钮 b2t: false # Scroll percent label in b2t button. ## 侧边栏加入一个 阅读进度 按钮 scrollpercent: true # Enable sidebar on narrow view (only for Muse | Mist). ##适配 小窗口 onmobile: false 设置头像参考文档：设置头像 设置作者昵称参考文档：设置作者昵称 博客描述参考文档：博客描述 设置字体参考文档：设置字体 设置代码高亮参考文档：设置代码高亮 侧边栏社交链接参考文档：社交链接 友情链接参考文档：友情链接 打赏功能设置参考文档：打赏功能设置 提醒：注意图片的格式（是.jpg还是.png） 站点建立时间参考文档：站点建立时间 微信公众号订阅参考文档：微信公众号订阅 提醒：此特性在版本 5.0.1 中引入 引入三方服务以优化模板添加文章评分功能参考文档：添加文章评分功能 我还没试过，感兴趣可以参考以上文档说明 添加文章分享功能参考文档：文章分享 更多功能如果你还还想添加更多功能，比如： 增加版权信息 在线联系 点击出现小爱心 自定义鼠标加载方式 等等 可以参考以下博客： nMask’s Blog Hexo-Next-主题优化 [hexo搭建个人博客–NexT主题优化] 如果你在使用时，遇到了一些“稀奇古怪”的问题，可以查看下这些博客： nMask’s Blog 「Hexo On Win10」新手搭建博客过程 最后，祝你顺利，过程很枯燥，也不会一帆风顺，但是，相信自己可以战胜困难。 如果，你有任何问题，都可以和我联系，这是传送门 ,随时联系]]></content>
      <categories>
        <category>小白学习</category>
        <category>独立博客搭建系列</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next模板</tag>
      </tags>
  </entry>
</search>
